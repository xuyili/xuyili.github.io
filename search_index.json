[["index.html", "R2ML 第 1 章 机器学习入门指南（极简版） 1.1 Python 1.2 机器学习 1.3 一些经验和建议", " R2ML By:玩机器学习的张北海 2022-01-19 第 1 章 机器学习入门指南（极简版） 我更倾向于把它称为一本百科百科全书，我会把基础框架搭好并开源，每一个章节，大家如果有更好的文章可以投稿给我，或者在github提交代码 https://github.com/tjxj/bookdown-r2ml 由于内容过于庞大，大家可以优先看一下这个极简版，分享我机器学习之路看过的一些书、教程、视频，还有学习经验和建议，希望能对大家的学习有所帮助。 1.1 Python 1.1.1 Python——书 之前跟出版社合作，书柜里积攒了很多Python相关的书，这里推荐三本最有价值的吧。 《流畅的Python》，很厚，比较全面，可以作为工具书常常翻看。 《 从入门到实践（第2版）》 非常全面，对新手还算友好，里面有很多的练习项目非常不错。 《利用Python进行数据分析·第2版》 数据分析入门必读书，主要介绍了python 3个库numpy（数组），pandas（数据分析）和matplotlib（绘图）的学习。有开源版，就不用买了，下载链接及代码如下： https://github.com/iamseancheney/python_for_data_analysis_2nd_chinese_version 1.1.2 Python——教程 学习Python最好的入门线上教程，首推Python官方文档 https://docs.python.org/zh-cn/3/tutorial/index.html 官方文档足够详细和系统，但是内容太庞大，学习来会有点吃力，我建议只看tutorial即可，就是上面的链接。 直接啃官方文档的教材，不如老师讲给你听来的效率高。廖雪峰的Python新手教程也是个不错的选择，每一节都有练习题，学习来更顺畅，对新手很友好。 https://www.liaoxuefeng.com/wiki/1016959663602400 机器学习最常用的库少不了Numpy Pandas Matplotlib这些库我觉得看官方文档就好了，不过英文不好的同学可能就不满意了，这里分别列一下这些库的官方文档和我觉得很不错的中文教程，提醒一下哈，官方文档只需要看我列出的链接即可。 Numpy 官方文档：https://numpy.org/doc/stable/user/quickstart.html 中文教程：https://www.numpy.org.cn/user/quickstart.html Pandas 官方文档：https://pandas.pydata.org/docs/user_guide/10min.html 中文教程：https://www.pypandas.cn/docs/getting_started/10min.html Matplotlib 官方文档：https://matplotlib.org/stable/tutorials/introductory/usage.html 中文教程：https://www.matplotlib.org.cn/tutorials/ 1.1.3 Python——视频 实话实话，我没有完整的看过任何Python视频。归根结底，Python入门很简单，看视频效率太低。传言B站的[小甲鱼]零基础入门学习Python不错，简单看了一眼，确实0基础。我们用Python是用来学机器学习的，喜欢看视频学习的同学可以看看，建议只看P1-P53即可。 《零基础入门学习Python》：https://www.bilibili.com/video/av27789609 1.2 机器学习 1.2.1 机器学习——书 市面上凡推荐机器学习的书，都少不了李航的《统计学习方法》和周志华的《机器学习》，我当初也是看了大佬推荐，在这两本书上耗费了极多的时间。但这两本我觉得都很不适合入门，尤其是统计学习方法，简直就是上等武功秘籍，太过精炼，啃起来太吃力。对比起来周老师的《机器学习》相对好点，其中有些公式推导有点跳，Datawhale 出了一本开源的《机器学习公式详解》是个很好的补充。周世华的《机器学习》是必不可少的工具书，还是必读的，而且要反复阅读，不过建议在看过视频教程之后。 https://datawhalechina.github.io/pumpkin-book 偏应用的书，只推荐一本，其他的都不要看！！！：《机器学习实战：基于Scikit-Learn、Keras和TensorFlow（原书第2版）》，入门可以先看前 9 章。 市面上很少有书能够把机器学习在业务层面的应用介绍清楚，比如模型解释、模型上线，模型监控等等，没有看到特别详细的，有一本还算满意，就是知名度比较低：《机器学习：软件工程方法与实现。 现在无论是竞赛还是工业界，boost模型都应用十分广泛，分类、回归、排序，XGBoost都能搞。最后再介绍一本我认为的必读：《深入理解XGBoost：高效机器学习算法与进阶》，作者是XGBoost开源社区贡献者何龙。这本书以机器学习基础知识做铺垫，深入剖析了XGBoost的原理、分布式实现、模型优化、深度应用等。 1.2.2 机器学习——教程 教程没有看到太好的，除了sklearn的文档，只推荐吴恩达、李宏毅、林轩田三位老师的视频课件。课件这里不单独列出来了，下载链接我放到思维导图里了。 Sklearn 官方文档：https://scikit-learn.org/stable/user_guide.html 中文教程：https://sklearn.apachecn.org/ 1.2.3 机器学习——视频 与Python不同，机器学习基础我觉得最好还是跟着视频学，因为初学机器学习算法，涉及很多公式推导，非常难理解，跟着视频学起来会轻松不少。 视频首推吴恩达的公开课，这是学习机器学习基础知识的最好的课程。英语不好的同学也不要担心，视频是有中文字幕的。 https://www.bilibili.com/video/BV164411b7dx 作为补充，时间充裕的同学可以看看台大李宏毅的机器学习公开课，特点是中文授课，比较轻松愉快。 https://www.bilibili.com/video/BV1pE411g7Wi 时间更充裕的也可以看看林轩田的视频课，只看基石部分即可。 https://www.bilibili.com/video/BV1Ft41197Dy 1.2.4 机器学习——数学基础 系统地学习机器学习所必须的数学知识 数学基础这一块是个无底洞，不太建议大家耗费过多时间，用到了再补也不迟。 也不建议大家看书，基础确实特别薄弱的同学，推荐一本：《机器学习的数学》，这本书特别全面的介绍了微积分、线性代数、概率统计、信息论、随机过程、图论等内容。再强调一遍，此书仅适于基础特别薄弱的同学。 我感觉机器学习中用到最多的应该是线代，喜欢看视频的可以看看李宏毅的机器学习中的线性代数： https://www.bilibili.com/video/BV1G7411f7BE/ 或者3blue1brown：线性代数的本质 https://www.bilibili.com/video/BV1Ys411k7yQ 其他数学基础相关的电子书，我也放到思维导图中了。 1.3 一些经验和建议 1、我敢肯定很多初学者都是资料收集爱好者，越攒越多反而不知道从何开始。我强烈建议把资料都扔掉，以我的这一套为准，一以贯之的学下去。 2、就像前面我提到的，很多东西先不要深究，不要在某些地方卡太久（比如数学部分，比如编程基础），先学下去，学完。了解大的框架之后，以后用到哪里，再回过来补也不迟。 3、机器学习的各种算法没必要样样精通，常用的比如LR、树模型、RF、XGBoost等等掌握好就不错了。 4、我身边一些优秀的程序员、分析师、工程师都非常推崇“做中学，学中做”，无论是书本还是视频，看到一些好的方法和技巧，要立即自己实现一遍。看起来非常简单的东西，真真动手的时候才会发现自己的不足。快速学完上述内容就尽快开始实践吧，可以先复现天池或kaggle上优秀的notebook，然后就参与一些入门竞赛。 5、如果你已有工作，最好的还是在业务中寻找机器学习应用场景，然后尝试去开发一个适用的模型。不懂就搜索，学习。这是我所知最好的，最有价值的学习方法。 6、输出也是特别好的学习方式，输出就是把新学到的知识用某种方式讲给别人听，做到让他们也能理解、学会。我比较喜欢写笔记（我常用的是微软的OneNote），然后把笔记整理成文章发到博客上。这样不仅使对自己知识掌握程度的一种检验，发现薄弱点，也可以让大家共同监督，相互学习，教学相长。 OK，以上就是所有内容。 "],["python基础.html", "第 2 章 Python基础 2.1 Python 2.2 Numpy 2.3 Pandas 2.4 Matplotlib 2.5 Python数据可视化 2.6 环境和IDE 2.7 如何阅读 Python 开源项目代码? 2.8 其他（待分类）", " 第 2 章 Python基础 机器学习绕不开学Python，但是我们一样要用工程师的标准要求自己。以下学习建议来自medium上的一位博主，我深以为然，这里仅列出涉及Python编程习惯的部分： 1、学会提出问题和解决问题 如果你解决问题的思维不够发达，可能就无法为你要解决的问题找到最佳的解决方案。编程不仅仅是编写代码，需要解决问题才能有机会出初学者行列。 提出编程相关的问题也很重要。如果不经尝试，就让别人解决你的问题，可能也会出局。这很难，但如果不尝试自己解决问题，你将对解决方案一无所得。 2. XY问题： “我需要从字符串中提取最后3个字符。” “不，你不需要。只需文件扩展名。” XY问题很有趣。你有个X问题，当你调用服务中心时，会寻求Y问题的解决方案，以解决X问题。 上面的案例就是极好的例子。如果想要文件名中的文件扩展名，很容易假设你需要的是最后3个字母。 如何写代码： def extract_ext(filename): return filename[-3:] print (extract_ext(&#39;photo_of_sasquatch.png&#39;)) &gt;&gt;&gt; png 用户从一开始应该会索要扩展名，最后3个字母是Y问题，而X问题是我们想要扩展名。 def extract_ext(filename): return filename.split(&#39;.&#39;)[-1] print (extract_ext(&#39;photo_of_sasquatch.png&#39;)) print (extract_ext(&#39;photo_of_lochness.jpeg&#39;)) &gt;&gt;&gt; png &gt;&gt;&gt; jpeg 3. 理解代码为何起作用（或不起作用）： 作为新手，你可能要花几天来对付一小段代码。如果这段代码突然起作用了，你可能会感觉放心，然后继续下一段代码。这是最糟糕的事情之一。不理解原因只管运行的做法，可能比不理解代码的为什么不运行更加危险。 不理解为何代码不运行的情况总会发生，当进行故障排除并搞清楚其原因时，思考代码不运行的原因和最终使其运行的因素非常重要。这次学到的知识会带到下一个程序中。 例如，如果多个缩进级别的代码中出现了缩进错误，可以尝试随机调整代码块，然后在最终运行时为自己庆祝。 切记，在大多数IDE中，可以折叠循环和if语句，从而更容易查看正在使用的部分。 另一种办法是将你的代码通过 www.Pythontutor.com可视化，就可以逐行查看代码运行的方式了。 4. 使用函数（并正确谈论函数）： 如果同一个操作重复5次，就应该考虑是否需要写个程序。编写代码时，如果发现同一动作执行了不止一次，应该考虑这是过程还是函数，还不只是写写代码。函数会返回内容，过程则只是运行代码，第一个案例是个过程，第二个是函数。 这样说可能会令人困惑，下面是其工作原理的示意图： 注意print和return的差异，看起来也许很相似，但如果你查看输出结果，函数只会返回发送的名称。 下一个要了解的语法是parameters和arguments，在过程或函数中定义时（红色部分）被称为形参（parameters），当发送名称到过程或函数中（绿色部分）时就叫实参（arguments）了。 5.面向对象编程 Python是一种面向对象的语言，其强大之处在于对象。将对象视为蓝图，如果使用蓝图，你可以创建该蓝图的实例。也就是说，你可以创建需要的多个蓝图实例，但不会损毁你使用的蓝图。 面向对象编程（OOP）是一个庞大的话题，因此我们不会在本节中涵盖所有你需要了解的内容，但可以通过几个简单的示例帮你入门。 如果你之前读过面向对象编程的相关内容，可能已经厌倦了学生（student）类，但我们又来了。从定义一个名为student的类开始，student会拥有一个名称和一个subject_list： class Student(): def __init__(self,name): self._name = name self._subject_list = [] 如果想要创建一个student，可以像这样将其分配给变量： student1 = Student(&#39;Martin Aaberge&#39;) 如果需要更多student，可以使用同一个类并添加另外的姓名： student2 = Student(‘Ninja Henderson’) student1和student2都是student类的实例，它们共享同一个蓝图，但彼此之间并无关系。此时，我们对学生们能做的不多，但我们确实增加了一个主题列表。要填充此列表，我们需要创建方法，你可以调用方法来实现与该类实例的交互。 我们更新： class Student(): def __init__(self,name): self._name = name self._subject_list = [] def add_subject(self, subject_name): self._subject_list.append(subject_name) def get_student_data(self): print (f&#39;Student: {self._name} is assigned to:&#39;) for subject in self._subject_list: print (f&#39;{subject}&#39;) print() 这个类可以用于创建、编辑学生信息，并获取我们存在其中的信息： #create students: student1 = Student(&#39;Martin Aaberge&#39;) student2 = Student(&#39;Heidi Hummelvold&#39;) #add subjects to student1 student1.add_subject(&#39;psychology_101&#39;) student1.add_subject(&#39;it_security_101&#39;) #add subject to student2 student2.add_subject(&#39;leadership_101&#39;) #print current data on students student1.get_student_data() student2.get_student_data() 将类保存在单独的文件中并导入主代码的操作很常见，在我们的案例中，我们会在student.py文件中创建一个student类，并将其导入我们的main.py文件（本案例中，它们都位于同一个文件夹中）。 from student import Student student1 = Student(&#39;Martin&#39;) student1.add_subject(&#39;biomechanics_2020&#39;) student1.get_student_data() 6.尊重PEP 我们经常看到人们在写Python代码时并不尊重PEP（Python增强提案：Python Enhancement Proposals），但我自己会尊重。 当你在开发环境中工作时，遵守标准非常重要——如果不是PEP标准，也至少要遵守公司的标准。 PEP是代码的一组准则，下面是PEP-8的链接（https://www.Python.org/dev/peps/pep-0008/），读起来很棒。请确保你通读过一次，了解大概内容。 2.1 Python 2.1.1 Python学习教程/方法 微软官方 Python 免费教程 Python 3 入门，看这篇就够了 速查表！Python学习的必备法宝，随查随用 50个Python学习资源，从青铜到王者！ 100道Python练手题目 总结了这 90 条写 Python 程序的建议 写给 Python 开发者的 10 条机器学习建议 成为Python大牛必须要掌握的高端语法 Python之禅：编写优雅Python代码的16个原则 2.1.2 Python基础系列 Python基础：索引与切片 Python基础：彻底学会列表和元组 Python基础：彻底学会字典 Python基础：彻底学会浅拷贝与深拷贝 Python基础：数据类型、条件语句、循环语句、异常处理 Python基础：zip函数的解释和可视化 Python基础：enumerate函数的解释和可视化 Python基础：map函数的解释和可视化 Python基础：文件读写最详细的讲解 Python文本预处理：步骤、使用工具及示例 Python函数合集：68个内置函数 17个常见的Python运行时错误 2.1.3 Python库 Python 200个标准库汇总！ 零差评 Python 内置库：itertools 机器学习必知的 10 个Python 库 34个Python自动化办公库！ 冷门却实用的数据科学 Python 库 Python处理大数据：推荐4款加速神器 Python处理大数据：0.052秒打开100GB数据 Python操作Oracle数据库：cx_Oracle Python操作MySQL数据库：pymysql Python中实现模糊匹配的魔法库：FuzzyWuzzy Python中操作目录和文件的标准库：pathlib 12 Python 开源框架：I/O，OLAP，Web 2.2 Numpy NumPy是Python中用于数据分析、机器学习、科学计算的重要软件包。它极大地简化了向量和矩阵的操作及处理。python的不少数据处理软件包依赖于NumPy作为其基础架构的核心部分（例如scikit-learn、SciPy、Pandas和tensorflow）。除了数据切片和数据切块的功能之外，掌握numpy也使得开发者在使用各数据处理库调试和处理复杂用例时更具优势。 重点推荐：最好的NumPy图解教程 AI基础：Numpy简易入门 101道Numpy、Pandas练习题 Numpy核心语法和代码整理汇总！ Python数据分析之numpy数组全解析 Numpy神秘失踪事件 像“打游戏”一样用 Numpy，还能可视化操作 2.3 Pandas Pandas是Python最知名的数据分析和处理库。它提供了许多的函数和方法，可加快数据分析和预处理步骤。今天介绍的这些示例将涵盖您可能在典型的数据分析过程中使用的几乎所有函数和方法。 13个Pandas奇技淫巧 5个好用的Pandas函数 10000字Pandas基础+进阶笔记 手把手教你用Pandas处理缺失值 30 个小例子帮你快速掌握Pandas Python数据分析之Pandas数据选取 Python数据分析之Pandas基本数据结构 Python数据分析之Pandas读写外部数据文件 Python数据分析之Pandas中的loc、iloc和at/iat 从Excel到Python：最常用的36个Pandas函数 12 种高效 Numpy 和 Pandas 函数为你加速分析 整理了 25 个 Pandas 实用技巧，拿走不谢！ Pandas切片操作：一个很容易忽视的错误 十套练习，教你如何使用Pandas做数据分析 Pandas进阶大神！从0到100你只差这篇文章！ 超全的 100 个 Pandas 函数汇总，建议收藏 2.4 Matplotlib 40000字 Matplotlib 实操干货 Matplotlib数据可视化：饼图与箱线图 Matplotlib数据可视化：图片展示与保存 Matplotlib数据可视化：入门及组件介绍 Matplotlib数据可视化：柱状图与直方图 Matplotlib数据可视化：折线图与散点图 Matplotlib数据可视化：文本与坐标轴 Matplotlib数据可视化：三大容器对象与常用设置 Matplotlib数据可视化：16个绘图实用小技巧 数据分析最有用的25个 Matplotlib图例，附代码 使用FuncAnimation 制作Matplotlib 动态图表 全 Matlplotlib 开源项目：PDF书+完整代码+已实现图表 2.5 Python数据可视化 Python数据可视化：可交互的图表库Altair Python数据可视化：从2维到6维数据 Python数据可视化：自动可视化任何数据集 Python数据可视化：私藏的30个数据可视化技巧 Python数据可视化：精选10款Python 可视化工具 Python数据可视化：8个流行的Python可视化工具包 Python数据可视化：缺失值可视化工具missingno Python数据可视化：赛博朋克风格库mplcyberpunk Python数据可视化：手绘风格可视化图表库CuteCharts Python数据可视化：一个交互式可视化Python库——Bokeh Python数据可视化：科研必备的可视化神器——PyQtGraph 2.6 环境和IDE 2.6.1 如何选择IDE 写 Python 代码最好的方式莫过于使用集成开发环境（IDE）了。它们不仅能使你的工作更加简单、更具逻辑性，还能够提升编程体验和效率。 每个人都知道这一点。而问题在于，如何从众多选项中选择最好的 Python 开发环境。初级开发者往往面临这个问题。 本文将概述最受程序员欢迎的 Python IDE，以及其他值得考虑的选项。在此之前，我们先来看看 IDE 是什么。 PyCharm 下载地址：https://www.jetbrains.com/pycharm/download/ PyCharm 由著名软件开发公司 JetBrains 开发。在涉及人工智能和机器学习时，它被认为是最好的 Python IDE。最重要的是，Pycharm 合并了多个库（如 Matplotlib 和 NumPy），帮助开发者探索更多可用选项。 兼容性：Windows、MacOS、Linux 主要插件和功能： 内置开发者工具 远程开发能力 实时编辑模式 IPython Notebook 优点： PyCharm 支持 web 开发框架，如 Pyramid、Flask 和 Django。 提供智能代码功能，可以执行更精确、快速的 bug 修复。 在 Docker 和 Vagrant 连接和 ssh 终端的帮助下，允许在远程主机上进行程序开发。 缺点： 界面庞杂 其优点的成本高昂 IPython Notebook 优点： PyCharm 支持 web 开发框架，如 Pyramid、Flask 和 Django。 提供智能代码功能，可以执行更精确、快速的 bug 修复。 在 Docker 和 Vagrant 连接和 ssh 终端的帮助下，允许在远程主机上进行程序开发。 缺点： 界面庞杂 其优点的成本高昂 Visual Studio Code 下载地址：https://code.visualstudio.com/Download Visual Studio Code 有时会与 Visual Studio IDE 混淆，后者并非 Python 使用者常用的工具。VS Code 是完整的代码编辑器，具备很多优秀功能，许多程序员称其为最好的 IDE 编辑器。 兼容性：Windows、Linux、Mac OS 主要插件和功能： 内置 git 自定义工具扩展插件 断点调试 交互式控制台 优点： 其 Electron 框架允许开发者在几乎所有平台上使用 VS Code。 在编辑器中直接 debug。 支持多个键盘快捷键，以加速编程。 缺点： debug 功能有限。 没有内置模板。 Sublime Text 下载地址：https://www.sublimetext.com/ Sublime Text 被认为是最好的 Python 编辑器，因为它简单、通用、方便。它使用广泛，可用于不同的平台。 兼容性：Windows、Linux、Mac OS 主要插件和功能： 简易导航，实现高性能 支持不同包，以自定义编辑器 只需一个关键词，即可复制常见代码段 即时项目切换和分割编辑 优点： 可处理多种标记语言。 允许用户选择想要进行的项目。 具备能够提供类和函数宽索引的重要工具。 提供强大的 API 和组织化的生态系统，以实现高性能。 缺点： 对于新手来说，过于高级。 其 git 插件不是特别强大。 VI/Vim 下载地址：https://www.vim.org/ Vim 位列最好的 Python IDE 工具前 5 名。它是一个 modal editor，可以从「文件编辑」中分割文件。相比最初的 Vi，Vim 有了巨大进步，功能更加强大。 兼容性：Windows、Linux、Mac OS、IOS、Android、UNIX、AmigaOS、MorphOS 主要插件和功能： 其脚本允许用 Python 执行几乎所有编程任务。 Ctags，帮助实现更好的标记导航。 内置基础词汇补全。 优点： 具备键盘界面，可以提升效率。 支持多个插件（如版本控制工具、文件管理工具）。 通过 .vimrc 文件实现不同扩展功能（如突出显示搜索结果）。 缺点： 界面笨拙，一些开发者认为其不方便使用。 其 modal editor 需要用户花费一定时间学习。 Spyder 下载地址：https://www.spyder-ide.org/ Spyder 是为数据科学而开发的。它是开源工具，能够与大量平台兼容，因而成为 IDE 新手用户的更好选择。为实现完美开发，它合并了多个关键库，如 NumPy、Matplotlib 和 SciPy。 JuPyter/IPython Notebook 下载地址：https://jupyter.org/ Jupyter 是基于 web 的编辑器，它允许开发者构建和运行脚本或 notebook。它相对简单，对用户也更加友好。Jupyter 还使用 Seaborn 和 Matplotlib 执行数据可视化。 本文概述了大量优秀的 Python IDE 和其他工具。决定使用哪一种工具取决于工具的便利性和对工具的熟练程度。当然，也有大家都喜欢的工具（如 PyCharm），但是你可以多尝试几种工具，看看哪种最适合你。 一些 IDE 适合新手，另一些则更加专业，每一个 IDE 都具备独特的功能和设计。本文仅提供一些选项，读者可以从中选择适合自己的 Python IDE。 2.6.2 PyCharm 10个省时间的 PyCharm 技巧（附视频讲解） 我用动画展现Pycharm十大实用技巧 最细的 PyCharm 安装+破解详细使用指南 PyCharm vs VSCode，是时候改变你的 IDE 了！ IntelliJ IDEA 15款 神级超级牛逼插件推荐 2.6.3 VSCode 高效的编程：我的VS Code设置 GitHub 代码一键转 VS Code，太好用了！ 用VSCode直接浏览GitHub代码 | 12.1K星 微软推出 Pylance，改善 VSCode 中的 Python 体验 2.6.4 Spyder&amp;Jupyter 神器 Jupyter，终于来了！ 手把手教你配置JupyterLab 环境 Anaconda的使用-Spyder快捷键大全 终于把 jupyter notebook 玩明白了 JupyterLab 终于出了 Windows 桌面版 JupyterLab 这插件太强了，Excel灵魂附体 用 Python 使用 Google Colab？岂止是炫酷 效率提升利器！Jupyter Notebook快捷键汇总 JupyterLab：数据分析程序员的必备笔记神器 2.7 如何阅读 Python 开源项目代码? 阅读 Python 开源项目代码主要有如下三个原因： 在工作过程中遇到一些问题 Google 和 StackOverFlow 等网站找不到解决办法，只能去翻源码。 对某些项目或者方向非常感兴趣，希望深入。 学习遇到瓶颈需要汲取开源项目的经验和用法来做提高。 要有目的的阅读开源项目 没有目的的阅读开源项目就是耍流氓，浪费了时间，但是能学到的东西也很少。怎么样根据自身情况去阅读呢？ 和兴趣以及工作契合。举个例子，工作中没有机会用到 Celery 又不是想自己造个轮子，读它的源码做什么？所以要从平时能接触到的那些项目中选取。有时候不去看 Django 的代码，因为日常工作基本遇不到，遇到了现翻就好了。 一个方向只看一两个典型的就可以了。比如 Web 框架只看过 Bottle 和 Flask 的源码。 清楚自己看代码的目的。就是你看代码是想了解人家怎么设计、调试 BUG、还是只是想学习正确的编程用法呢？其实没有必要细抠每个代码细节，有时候当黑盒看，知道输入输出就可以了。 优秀的开源作者 和工作中看别人代码差不多，基本每个人、每个项目、每个团队都有自己写代码的风格，比如变量命名风格、某些语言特性使用方式、代码规范要求、目录风格等，其实开源项目的作者也是一样。看代码，如看人「团队」 kennethreitz Requests 和 Python-guide 作者。他还有一个非常励志的故事，有兴趣的可以看 谁说程序员不是潜力股？ mitsuhiko flask、Jinja2、werkzeug 和 flask-sqlalchemy 作者。 sigmavirus24 flake8、pycodestyle「原 pep 8」、requests、urllib3 等项目的主要贡献者和维护者。 ask Celery 及相关依赖的作者。 ajdavis mongo-Python-driver「pymongo」、tornado 等项目的主要贡献者。 bitprophet fabric、paramiko「Python 的 ssh 库」作者。 前 2 个是公认的 Python 领域代码写的最好的、最有创意的工程师。 推荐一个非常厉害的项目 GitHub - aosabook/500lines(https://github.com/aosabook/500lines) 500 Lines or Less, 它里面包含了 22 个由该领域的专家完成，用不到 500 行的代码实现一个特定功能的子项目。连 Guido van Rossum 都亲自来写基于 asyncio 爬虫了，Nick Coghlan、ajdavis 也出场了。 2.8 其他（待分类） pip 的高阶玩法 Python隐藏技巧合集 Python网络编程之ZeroMQ Python 零基础完成网站搭建 6种让Python程序变慢的坏习惯 编程大神的骚操作：Python技巧小贴士 分享30段Python代码，拿起来就能在工作中用！ 不一样的python编程体验：脚本可视化工具 17个Python骚操作，你都Ok吗？ 震惊了！每30秒学会一个Python小技巧 提速30倍！这个加速包让Python代码飞起来 用 Python 手写十大经典排序算法 细数这些Python技巧，让你的Coding事半功倍~ 原始数据哪里找？这200个数据网站请收好！（附链接） 27 个问题，告诉你 Python 为什么如此设计？ 在终端执行 Python 代码的 6 种方式 比 Python 快得吓人，PyPy 极简入门 3段极简代码带你入门Python科学计算库SciPy black:一键美化Python代码 用 python 制作高逼格的数学动画 这可能是史上最全的Python算法集！ 5 分钟掌握 Python 中常见的配置文件 分分钟甩 Word 几条街！用Python编辑公式竟可以如此简单 Python高能小技巧：不要在for与while循环后面写else块 珍藏的8个Python高效数据分析的技巧！ 手把手教你发布 Python 项目开源包 Python自动化办公之Word，全网最全看这一篇就够 你真的懂print(‘Hello World!’)？我不信 献给 Python 开发人员的 25 个最佳 GitHub 代码库！ 10 个“疯狂”的 Python 项目创意 Python新工具：用三行代码提取PDF表格数据 特朗普：没有人比我更懂数据分析 吐血整理！ Python 中的 10 个图像处理神器 6行代码！用Python将PDF转为word 用Python学线性代数：自动拟合数据分布 Python之父：Python 4.0可能不会来了 Google内部Python代码风格指南(中文版) 7个有趣的Python实战项目，自动写检讨书？？？ Python 优化提速的 8 个小技巧 Python 实 现导弹防御系统 7个Python项目短代码 开源 Python 项目详细指南 告别复制粘贴，Python 实现 PDF 转文本 为了这个GIF，我专门建了一个网站 "],["数学基础.html", "第 3 章 数学基础 3.1 数学学习误区 3.2 机器学习与数学 3.3 统计学 3.4 概率论 3.5 微积分 3.6 线性代数 3.7 优化", " 第 3 章 数学基础 机器学习理论是众多学科的交叉，在数学基础方面，应该补充哪些知识呢？ 机器学习中涉及的数学课程比较多，要想一下子去穷尽所有课程显然也不现实，大可不必打好所有的数学基础再去学机器学习，最好的做法是当你对机器学习本身的理解达到一定瓶颈的时候，你可以补一补一些相关的数学基础之后再回去看机器学习的问题也许会更快的有所突破。 1、 统计学和概率论 统计学和概率论可以用于特征的可视化、数据预处理、特征变换、数据填补、降维、特征工程、模型评估等环节。以下是您需要熟悉的主题： 均值，中位数，众数，标准差/方差，相关系数，协方差矩阵； 概率分布（二项分布、泊松分布、正态分布），p值，贝叶斯定理（精度、召回率、阳性预测值、阴性预测值、混淆矩阵、ROC曲线）； 中心极限定理，R2_score，MSE（均方误差），A / B测试，蒙特卡洛模拟… 2、 多变量微积分 大多数机器学习模型都是使用具有多个特征或预测变量的数据集构建的。因此，熟悉多变量演算对于建立机器学习模型非常重要。以下是您需要熟悉的主题： 多变量函数； 导数和梯度； 阶跃函数，Sigmoid函数，Logit函数，ReLU函数（整流线性单位函数，Rectified Linear Unit）； 成本函数； 函数绘图； 函数的最小值和最大值… 3、 线性代数 线性代数是机器学习中最重要的数学技能。当数据集被表示为矩阵，线性代数则可用于数据预处理、数据转换、降维和模型评估。以下是您需要熟悉的主题： 向量； 向量的范数； 矩阵，转置矩阵，矩阵的逆，矩阵的行列式，矩阵的迹； 点积，特征值，特征向量… 4、 优化方法 大多数机器学习算法通过最小化目标函数来执行预测建模，因而机器学习必须应用于测试数据的权重才能获得预测标签。以下是您需要熟悉的主题： 成本函数/目标函数； 似然函数； 损失函数； 梯度下降算法及其变体（例如，随机梯度下降算法） 3.1 数学学习误区 机器学习从业者不需要过度的把时间精力放在数学上，这个观点来自我比较喜欢的一位机器学习领域的大牛——微调@知乎，这是他较早之前在回答“如何看待「机器学习不需要数学，很多算法封装好了，调个包就行」这种说法？”中的观点，我深表认同。 大部分机器学习从业者不需要过度的把时间精力放在数学上，而该用于熟悉不同算法的应用场景和掌握一些调参技巧。好的数学基础可以使你的模型简洁高效，但绝非必要的先决条件。 原因如下： 即使你有了一定的数学功底，还是不知道怎么调参或者进行优化。这话说的虽然有点自暴自弃，但扪心自问在座的各位，当你发现accuracy不好、loss很高、模型已经overfitting了，你唰唰唰列列公式玩玩矩阵就知道问题出在哪里了吗？不一定。诚然，懂得更多的统计原理可以帮助推测问题出在了哪里，你可能换了一个loss function或者加了新的regularizer，但结果不一定会更好:( 数学基础之于机器学习从业者很像debugger之于码农，它给了你方向，但不能保证你一定可以解决问题。那怎么能解决问题？只有经验经验经验，别无他法，有时候甚至靠的是直觉。数学基础是好的内功基础，但你调包调多了，其实也慢慢能抓到一些感觉，不必看不起“调包侠”。 工业界可以应用的模型是很有限的，可调的参数也是有限的。工业界选择模型非常看重可解释性，效率，以及和整个系统的整合能力。举例，在我的工作中，大部分时间都在使用Regression和Decision Tree相关的算法（如 Random Forests）。是因为这两个算法最好么？不，恰恰是因为这两个算法稳定及高效，而且容易解释。对于这样的模型，你即使数学能力很强，能调整的参数也是有限的。根据网上的例子和经验，大量的工程师可以在数学基础稍弱的情况下做到很好的效果。 数学/统计知识已经成了既得利益者刻意为外来者建立的一道壁垒。不知道大家有多少人是从事过ML研究的。我个人的观察是做出成绩的ML研究人员是有限的，科班出身的researcher更是远远无法工业界的空缺。所以大家没有必要担心会被转行者抢了饭碗，也没有必要刻意鼓吹一定要懂矩阵，凸优化，等数学知识才配做机器学习。大家都是出来卖的，不必互相为难。说来惭愧，在工作中我常常跟老板说这个人不能用，你要用我这种科班出身的人，但我内心是不赞同的。每当我看到知乎上有人问机器学习怎么入门，结果大家立马推荐第一本就看PRML和Statitical Learning以及一大堆公开课和数学课的时候，我的内心是崩溃的。各位答主的目标是把所有人都吓回去还是秀一下优越感？ 理论模型和实际应用分的是两块不同的蛋糕。承接第2,3点，做理论研究的发力于突破，提出新的模型或者优化方法，做应用的致力于把模型应用于数据上，攫取商业价值。这两者不存在利益冲突，做理论的人有自带正统光环的优势，所以更该显得大度一些。只有“调包”的人越来越多，这个行业才会繁荣，因为证明技术落了地，可以带来实际价值。 行业的发展趋势是降低工具的使用难度，这让我们不必反复造轮子。亚马、逊谷歌、微软等各大平台都开放了他们的机器学习工具。以前人们还需要自己写各种模型，好一些的调一下sklearn，但现在Azure ML Studio已经方便到零代码了。年初的时候，我试了一下ML studio，简直方便的可怕，完全是图形拖动连接就可以建立模型，那一刻我仿似看到了自己即将失业。 文艺一点说，我们需要更包容的心态，切勿文人相轻。想要接触了解一门学科，应该先有兴趣，才有探索的积极性。就像我们第一次看到Hello word出现的样子，很多刚入行的人第一次看到机器学习能解决实际问题时，会产生浓厚的兴趣。 我怕的就是所谓的圈内人都说你必须要会矩阵分解，必须要会用trace算导数，必须会优化，才能开始学习机器学习。这个周期太长，很多人连开始的勇气都没有~我觉得不管怎么样，要先动手做起来，发现自己的不足，再去补充需要的东西。 既然学术是自由的，我们就打开大门，欢迎大家都进来坐坐。如果他/她不喜欢，欢迎到隔壁串门。但我们不要给自己家门垒了高高的台阶，说闲人勿进。久而久之，难免门可罗雀。 综上，我觉得应用机器学习模型和技巧既不能完全不懂数学，两眼一抹黑，也不该要求每个从业者都要精通各种数学理论。模型应用者要长存对理论的敬畏之心，不要总想搞个大新闻说“机器学习也不过如此”，但做理论的也不必觉得高人一等，别人都是二等公民。 3.2 机器学习与数学 神经网络原来是这样和数学挂钩的 机器学习和数学模型应当是互补的关系 在数据科学中需要多少数学技能？ 深度学习优化背后的数学基础 机器学习中的数学意义 高数、线代应该成为计算机专业学习的重心吗？ 3.3 统计学 统计学无用了 ？？？ 统计学中常用的数据分析方法汇总 统计学和机器学习到底有什么区别？ 推荐一个免费的统计学入门课程 统计学中常用的数据分析方法汇总 机器学习中的统计学——协方差矩阵 统计学公开课大盘点 数据分析师必须掌握的统计学知识！ 【深度解析】大数据面前，统计学的价值在哪里？ 5个基本概念，从统计学到机器学习 超全干货 | 统计学中常用的数据分析方法汇总！ 数据科学家必会10个统计分析方法 统计学常犯的18个错误，请务必跳过这些坑！ 超级干货！统计学知识大梳理 直击灵魂！统计学知识十问十答，你都会吗？ 机器学习和统计学习的区别：10个统计分析方法 Python+统计学：探索数据分析常用的统计分布 Python实现常用的假设检验 ！ 【干货】统 计 学 × 数 据 分 析 统计学知识大梳理 机器学习深度研究：特征选择中几个重要的统计学概念 统计计量 | 吸烟的人更长寿？冰淇淋销量越好溺亡人数越多 统计学:终于有人把p值讲明白了 p值是什么？统计学家用最简单的方式告诉你 R 与 Python 双语解读统计分析基础 3.4 概率论 概率论与数理统计公式整理(完整版) 机器学习必懂的13种概率分布，附代码实现！ 吴恩达的 CS229的数学基础-概率论，在线翻译版 数学系的概率论和我们的不太一样 数据科学中常见的6个概率分布（Python实现） 正态分布在机器学习中为何如此重要？ 反直觉的三门问题，为什么80%的人都错了？ 如何像数学系同学那样入门概率论？ 机器学习基础 - 偏度、正态化以及 Box-Cox 变换 3.5 微积分 机器学习数学精华：高等数学 瞎扯数学分析——微积分（大白话版） 万物皆“数”：你最好学学微积分，它是上帝的语言 3.6 线性代数 如何学好线性代数？ 线性代数行列式的导数 我爱线代，线代使我快乐 机器学习的线性代数（Python版） 同济版《线性代数》引发激烈争议 矩阵和线性代数原来是这么来的 10个例子带你了解机器学习中的线性代数 吴恩达的 CS229的数学基础（线性代数）在线翻译版 初学者 | 10个例子带你了解机器学习中的线性代数 3.7 优化 凸优化课件 最优化理论发展简史 算法系列：最优化问题综述 "],["机器学习基础.html", "第 4 章 机器学习基础 4.1 机器学习总览 4.2 机器学习的局限 4.3 数据清理和格式化 4.4 探索性数据分析 4.5 特征工程和特征选择 4.6 性能指标 4.7 优化方法 4.8 超参数调整 4.9 评估最佳模型 4.10 机器学习资源推荐 4.11 面试&amp;竞赛经验 4.12 机器学习的书怎么读？ 4.13 机器学习工具 4.14 其他", " 第 4 章 机器学习基础 自学机器学习多半不会一帆风顺，以下十个要点在自学中要高度重视，这样会少会走很多弯路： 数学，代码和数据是你最重要的三大项 任何有效的机器学习管道都是数学、代码和数据的交叉。每一项只有和另一项在一起时才会有效果。 如果你的数据质量很差，那么无论你的数学计算多么优雅或代码多么高效都没用。 如果你的数据质量最高，但你的数学计算错误，那么你的结果可能会不是很好，甚至会更糟，造成伤害。 如果你的数据和数学都是世界级的，但是你的代码效率很低，那么你将无法获得扩展带来的好处。 数据为你提供了一个包含自然瑰宝的采矿地点。数学就是你的鹤嘴锄。代码可以让你建立一支挥舞着鹤嘴锄的机器人队伍。 这三大项是你系统的输入(你拥有的)和输出(你想要的)之间的桥梁。 注：三大项中的数学分支也包含统计和概率。 三大项之外的唯一例外 除了不能平衡这三大项之外，还有一个更大的罪过：忘记这三大项是为谁服务的。即使是执行得最好、由最优雅的数学驱动的代码，如果不能为客户提供服务，从最丰富的数据中获得洞察也毫无意义。 工程师经常会发现自己迷失在一个过程中，忘记了最初想要的结果。尽管他们怀着良好的意图进行，但他们忘记了，意图并不像行动那么重要。 三大项至少要为客户提供点好处，总比什么都不提供要好。 需要澄清的是，如果你的先进模型需要47倍的时间才能提高1%的准确率，那么它是否提供了最好的体验？ 不要被三大项给骗了 无论你多么崇拜这三大项，你都不应该被你的爱蒙蔽。自学成才的机器学习工程师是他们自己的最大的怀疑者。 他们知道，数据不能进行证明，只能进行反驳(只要在十亿数据中有一个数据点就能证明之前的概念是错误的)，一点点糟糕的数学运算就会产生极端的后果(自然不是线性的)，代码的效率只有在它最薄弱的地方才有。 无论三大项多么神圣，直觉也不应被忽视。如果一个结果好得令人难以置信，除非你很幸运，否则它很可能就是错的。 和你需要提供服务的客户保持好关系 让机器做它们擅长的事情(反复重复过程)。让你去做你擅长的事情时(关心、设身处地、提问、倾听、领导、教学)。 你的客户不像你那样关心三大项。他们关心他们的需求是否得到满足。 向那些为你奠定基础的人致敬 当你想到计算机、机器学习、人工智能、数学等领域时，你会想到谁的名字？ Ada Lovelace，Geoffrey Hinton，Yann LeCun，Yoshua Bengio，Alan Turing，Fei Fei Li，Grace Hopper，Andrew Ng，Jon Von Neumann，Alan Kay，Stuart Russel，Peter Norvig？ 当然，在你听到或记住的所有名字中，有1000个名字功不可没，但却从历史书中消失了。 后起之秀应该认可前辈们做出的巨大努力，但也应该认可他们中的每一个人都会告诉这位新晋的机器学习工程师同样的事情：这个领域的未来取决于你的工作。 不要低估了完全重写的力量 你的目标应该是在第一时间构建可靠的东西。但随着技能的提高，你可能会想重构之前的作品，拆掉它们，用新的视角重新创造它们。 自学成才的机器学习工程师都明白，就像大自然一样，软件和机器学习项目永远不会完成，它们一直在运动。数据变化，代码在新的硬件上执行，一个天才发现了一个计算高效，低内存依赖的优化器适合，并称之为Adam。 你不仅应该对这些变化持开放态度，还应该欢迎它们。一旦它们出现，请使用你最好的判断力来判断它们是否值得实现到你的系统中 —— 仅仅因为有些东西是新的，并不意味着它是必需的。 避免在工具上滥情 在编程界，一个常见的轶事是粉刷自行车棚。它说的是一个程序员，或者一组程序员，担心的是车棚应该是什么颜色，而不是问一些重要的问题，比如车棚是否真的可以存放自行车。 当然，这个自行车棚也可以用电脑程序来代替。 在机器学习的世界里，你会听到关于R还是Python、TensorFlow还是PyTorch、书籍还是课程、数学还是code first(两者都有，记得这三位一体吧)、Spark还是Hadoop、Amazon Web Services还是谷歌云平台、VSCode还是Jupyter、Nvidia还是……的无休止的争论。 所有的比较都是有效的，但没有一个值得与对方争论。 你应该回答的真正问题是：用什么可以让我以最快、最可靠的方式建立我的想法？ 一旦你问自己这个问题，你会发现其他人都在问自己同样的问题。 工程师的诅咒是从工具开始，然后寻找问题，而不是从问题开始，然后寻找工具，只有到了那个时候，如果没有合适的工具，才应该去构建它。 学习资源也是如此。数学、代码和数据的三大项，在你学习它的时候就是不变的，唯一重要的是你如何使用它。 不要忘记：许多问题可以在没有机器学习的情况下解决。 你的想法是商品 不要把一个执行好想法的人与窃取你想法的人混为一谈。你的想法在别人手中比在你的头脑中更有价值。 作为一名工程师，你的角色不仅是建立自己的想法，而且还要与他人沟通，向他们展示如何从这些想法中获益。如果你缺乏这样的沟通能力，你应该与有这种能力的人合作，或者寻求培养这种能力。 在一个没人知道该相信什么的世界里，你可以通过做真实的自己来区分自己。诚实面对你做的东西所能提供的和你所不知道的。能够承认自己的无知是一种优势，而不是弱点。 好的技术总是胜利的，撒谎永远不会胜利。构建技术。不要撒谎。 你的邻居、同事、同学和伙伴也在思考这个问题 你看到别人的进步而嫉妒吗？或者你把它看作是你能做到的事情的动力？ 你对别人的成功的感觉就是你自己成功时候的感觉。 不能贪 你应该寻求建立你运用三大项的技能，回答那些你想要提供服务的人的问题，但你不应该带着欲望这样做。欲望会诅咒你，让你永远过于严肃地看待未来，而不是享受你现在所拥有的。 对提高技能的渴望的治疗方法是培养对学习的热爱。 自学成才的机器学习工程师能够很快地学习利用数学、代码和数据力量所需的概念，但不能匆忙行事。他们明白学习任何有价值的技术都需要时间，如果是这样的话，还不如享受这个过程。 从一开始，你就是对自己的启蒙和教育负责的人。知道了这一点，你就应该选择那些无论你有什么样的运气都能成功的项目。这个项目是否满足了你的好奇心？它是否对你的技能构成挑战？它可以让你遵守这些戒律吗？如果是这样，就足够了。 最后，在沿着自己的道路行进的同时，自学成才的机器学习工程师在他们的脑海中一直保持着这样的印象： 没有知识就没有资质 没有行动就没有思想 没有享受就没有学习 没有风格就没有创造 没有实践就没有技巧 没有工具就没有目的 没有展示没有贸易 没有怀疑就没有假设 没有贡献就没有消费 没有对现在的爱，就没有对未来的渴望 最重要的是，没有三大项就没有机器学习 4.1 机器学习总览 机器学习术语表 机器学习项目流程 图解机器学习:14幅图 机器学习中的常识性问题 一个完整机器学习项目流程总结 带你建立一个完整的机器学习项目 机器学习中算法与模型的区别 机器学习常见知识点总结（2021） 读懂一个 Demo，入门机器学习 数据挖掘、机器学习和模式识别？？？ 所以，机器学习和深度学习的区别是什么 图解机器学习：人人都能懂的算法原理 学深度学习是不是需要先学机器学习？ 机器学习和深度学习的 5 个关键区别 机器学习从入门到精通：必经的5个阶段 机器学习最全知识点汇总（万字长文） 用 Python 实现机器学习的快速上手指南 吐血整理：机器学习的30个基本概念，都在这里了（手绘图解） 机器学习、数据科学、人工智能、深度学习和统计学之间的区别！ 4.2 机器学习的局限 慎用！别动不动就上机器学习！ 打破机器学习中的小数据集诅咒 机器学习到底需要多少数据？ 更好的数据胜过更高级的算法 机器学习，数据科学家与Bullshiter 机器学习是最容易得到错误结论的一种解决方案 要强大的“黑匣子”，还是“可解释”的机器学习 4.3 数据清理和格式化 数据预处理|关于标准化和归一化的一切 数据缺失、混乱、重复怎么办？最全数据清洗指南 做好异常数据分析，看这篇就够了 Python数据预处理：彻底理解标准化和归一化 机器学习基础：类别不平衡问题处理方法汇总及实际案例解析 机器学习基础：缺失值的处理技巧（附Python代码） 机器学习的心腹大患：数据泄漏 机器学习基础：类别变量，别上来就整one-hot编码 数据分析的3个常用方法：数据趋势、对比和细分分析 【Python基础系列】常见的数据预处理方法（附代码） 异常检测怎么做，试试孤立随机森林算法（附代码） 机器学习：五种检测异常值的方法（附Python代码） 4.4 探索性数据分析 Python骚操作：一行代码实现探索性数据分析 推荐收藏 | 100个数据分析常用指标和术语 1份优秀的数据分析报告，8步就能搞定！ 8个用于数据清洗的Python代码 10个可以快速用Python进行数据分析的小技巧 学会五种常用异常值检测方法，亡羊补牢不如积谷防饥 4.5 特征工程和特征选择 有句话必须得放在前面：数据和特征决定了机器学习的上限，而模型和算法只是逼近这个上限而已。由此可见，特征工程尤其是特征选择在机器学习中占有相当重要的地位。 机器学习特征工程：10个基本功 机器学习特征工程：5 分钟了解特征工程 机器学习特征工程：特征选择的通俗讲解 机器学习特征工程：详解 5 大常用特征选择方法 机器学习特征工程：阿里天池机器学习竞赛项目总结 机器学习特征工程：必知必会的3种特征选取方法 机器学习特征工程：一款功能强大的特征选择工具 机器学习特征工程：机器学习中特征选择怎么做？ 机器学习特征工程：为什么需要对数值类型的特征做归一化？ 机器学习特征工程：在对数据进行预处理时，应该怎样处理类别型特征？ 4.6 性能指标 分类之性能评估指标——Precision和Recall 深度研究：回归模型评价指标R2_score 分类模型评估指标汇总 模型评估指标AUC和ROC，这是我看到的最透彻的讲解 深度研究：敏感性、特异性、精确率、召回率 4.7 优化方法 每个程序员都应该收藏的算法复杂度速查表 【算法系列】凸优化的应用——Python求解优化问题（附代码） Dropout、梯度消失/爆炸、Adam优化算法，神经网络优化算法看这一篇就够了 用有趣的方式解释梯度下降算法 一文读懂梯度下降背后的数学原理几何 4.8 超参数调整 机器学习：模型调参之方法论 机器学习调参这事儿,就像老中医看病。。。 机器学习模型 3 个模型调优改进策略 机器学习最困难的部分：超参数调试 4.9 评估最佳模型 机器学习：模型评价指标总结 Python sklearn模型选择 十九种损失函数，你认识几个？ 【算法系列】Boosting 融合机器学习模型：一种提升预测能力的方法 机器学习中常用的5种回归损失函数 最全的损失函数汇总 机器学习模型调参指南（附代码） 4.10 机器学习资源推荐 自学机器学习十诫 机器学习资源清单和路线 入门机器学习的路线图，国外优质资源推荐 油管博主总结的2021年入门机器学习完整资料 只需 14 步，7000 字，Python机器学习路线！ Github 上最大的开源算法库，还能学机器学习！ 中文版终于来了！GitHub上最励志的计算机自学教程 李沐大神在斯坦福开新课了！面向机器学习实战，课程全部免费！！ 斯坦福2021版图机器学习课程完结，视频、PPT全放送，大神主讲 哈佛 95 后小哥撰写《从零开始的机器学习》，书籍资源已开放！ Awesome！超详细的人工智能专家路线图，GitHub数天获2.1k星 4.11 面试&amp;竞赛经验 知乎看到了一篇很好的算法工程师的学习技术总结，可以很好地，为大家在技术路线的成长方面提供一些方向指引，配套一些自我考核项，可以带着实践进行学习，加深理解和掌握。 技术学习路线脑图一览： 机器学习160问 2019算法岗面试经验汇总 滴滴数据分析岗试题分享 22道机器学习常见面试题目 15分钟进击Kaggle大赛top2% 算法工程师当前选哪个方向好？ 校招社招中的常见算法套路 315道Python面试题，欢迎挑战 算法工程师面试的理想与现实 百度机器学习实习三面试题及经验 美团 NLP算法岗面试题精选，附答案 面试了一个 46 岁的算法工程师 一个正确的 LeetCode 刷题姿势 吴恩达教你做机器学习职业规划 200 道经典机器学习面试题总结 阿里一年级算法工程师的工作总结 13000字！最常问的MySQL面试题集合 机器学习算法岗面经整理！查漏补缺 知乎高赞：拼多多和国家电网，选哪个？ 机器学习/深度学习面试必备的25个问题 研一学机器学习和深度学习，越学越糊涂 华为200万年薪的博士生！分享学习经验 答疑 | 算法岗和开发岗哪个前景更好？ 【干货】Kaggle 数据挖掘比赛经验分享 微信数据大赛 Top1-7 方案分享（附链接） 数据挖掘竞赛利器-Stacking和Blending方式 梳理十年Kaggle竞赛，看自然语言处理的变迁史 15年经验分享：40个改变编程技能的小技巧 数据分析 | 总结了28道数据分析经典面试题 听听阿里老哥对算法工程师技术学习路线的建议 数据工程师必备的8项技能，不要只知道Python！ 经验分享：软件开发程序员转型Data Scientist 腾讯、阿里、字节、美团、百度薪资情况，可供你参考 看腾讯广告算法大赛十强选手如何顺利拿下腾讯offer 面向工程师的Google面试指南！GitHub 9.8万星高赞，中文版发布 同样的实验室，硕士们进了BAT拿高工资，为什么博士却要挤破头进985高校？ 4.12 机器学习的书怎么读？ 看书绝对是一种效率最低却必须在学习过程中经历的一个过程，第一次学机器学习的时候还是选定一本书，先精通一本书籍，再泛读其他书籍，其他机器学习书籍作为查缺补漏的教材或者参考资料。 其实入门的话感觉还是要看一些视频，ng大大的最方便，台湾有个机器学习基石，也不错，但是视频永远只能入门，而看书，像prml的作用也只是夯实基础，适当在感兴趣领域追一些paper，也是很有帮助的。 经典书籍的精读注意以下三点： 一、反复重复推导过程； 二、实践代码，将数学推导与数据的特点，如维度等建立联系； 三、看不懂正常，多翻几本书比较着看，然后上网搜推导过程 4.12.1 统计学习方法 墙裂推荐！统计学习方法(第2版) [笔记, 代码] 《统计学习方法》极简笔记P2：感知机数学推导 《统计学习方法》极简笔记P3：k-NN数学推导 《统计学习方法》极简笔记P4：朴素贝叶斯公式推导 《统计学习方法》极简笔记P5：决策树公式推导 《统计学习方法》极简笔记P6：逻辑回归算法推导 4.12.2 西瓜书 《机器学习》周志华西瓜书 笔记/习题答案 周志华新作《机器学习理论导引》阅读攻略 4.13 机器学习工具 决策树可视化，被惊艳到了！ 开发机器学习APP，太简单了 太强了，机器学习代码，自动生成！ 2021年Python十佳机器学习库大盘点 2021 年最值得学习的 5 大机器学习编程语言！ 4.14 其他 机器学习Tips：关于Scikit-Learn的 10 个小秘密 机器学习初学者绕不开的 15 个 Scikit-Learn 重要技能！ 集成学习：一种先进的机器学习方法 在机器学习项目中该如何选择优化器 机器学习小知识: 图解熵、交叉熵和 KL-散度 机器学习基础：令你事半功倍的pipeline处理机制 超硬核：一文了解基于复杂网络的机器学习 如何解决机器学习模型过拟合？6个必备技巧 机器学习深度研究：机器学习验证集为什么不再有新意？ 机器学习中需要了解的 5 种采样方法 融合机器学习模型：一种提升预测能力的方法 机器学习实践中的10个小秘诀！ 学习深度学习是否要先学习机器学习？ 算法工程师常用炼丹技巧汇总 机器学习中常见的9种距离度量方法，内含欧氏距离、切比雪夫距离等 剑桥大学：机器学习模型部署都有哪些坑？ 机器学习基础图表：概念、原理、历史、趋势和算法 机器学习中的相似性度量总结 机器学习避坑指南：训练集/测试集分布一致性检查 机器学习专业要不要读博？ 机器学习的未来：半监督学习 机器学习：来自13个Kaggle项目的经验总结 机器学习下一波的爆发点:TinyML 基于统计的异常检测方法S-H-ESD 维护机器学习代码的正确姿势 漫画笔记，机器学习的另一种打开方式 【机器学习】算法黑话大赏，我直呼好家伙！ 【极简概述】4种不同类别的机器学习 机器学习基础：多标签分类的玩法 机器学习基础：如何检测两组数据是否同分布？ 机器学习中有哪些形式简单却很巧妙的 idea？ 机器学习：从零开始学习梯度下降 机器学习：不能只靠数据 2021年，机器学习研究风向要变了？ 【机器学习】异常值检测实践 - Python 代码与可视化 论机器学习领域的内卷 机器学习博士自救指南 机器学习也内卷，要不要转行计算机？ 机器学习中的维度灾难 一文详解机器学习中最好用的提升方法：Boosting 与 AdaBoost 机器学习Bagging思想 南京大学开源！ResT：高效Transformer架构！ 吐血整理：关于机器学习不可不知的15个概念 机器学习8个核心概念 自动驾驶中的机器学习 机器学习：一文详解算法优化内部机制 Word2vec到BERT 我，14岁初中生，从零开始拿到了机器学习竞赛冠军 机器学习的入门平台天花板，还可免费实操经典教程 收手吧，华强！我用机器学习帮你挑西瓜 一份数学小白也能读懂的「马尔可夫链蒙特卡洛方法」入门指南 机器学习各研究领域综述汇总！ 决策树、随机森林、bagging、boosting、adaboost、gbdt、xgboost总结 深度盘点：详细介绍 机器学习中的 7 种交叉验证方法！ 一文让你通俗理解奇异值分解 机器学习算法没那么重要 "],["机器学习模型.html", "第 5 章 机器学习模型 5.1 掌握机器学习算法的三重境界 5.2 100天搞定机器学习系统（连载中） 5.3 回归 5.4 逻辑回归 5.5 决策树 5.6 主成分分析 5.7 随机森林 5.8 XGBoost 5.9 聚类 5.10 贝叶斯 5.11 SVM 5.12 降维 5.13 其他 5.14 学习方法", " 第 5 章 机器学习模型 5.1 掌握机器学习算法的三重境界 完整口述机器学习模型原理 这算是基本操作了，考验逻辑思维和表达能力。 手推机器学习算法原理 大家在学习《统计学习方法》或《机器学习》的时候，学完一章，要做到合上书，给你一张白纸，可以把本章算法每一步写的清清楚楚。这里顺便推荐一个我觉得非常不错的机器学习视频教程：shuhuai007大佬的《机器学习-白板推导系列》，大佬用21节课，在白板上一步一步推导算法，讲的非常详细，通俗易懂。 课程地址： https://space.bilibili.com/97068901/channel/detail?cid=54167 有好心的同学将板书做了整理，非常美观，已更新到第19章： https://github.com/ws13685555932/machine_learning_derivation 机器学习算法Python实现 这就比较考验代码能力了，虽然现在sklearn有现成的包可以调，还是建议大家将常见算法如LR、感知机、k近邻、贝叶斯、SVM、EM、Adaboost、决策树、随机森林、GBDT、XGBoost、聚类等等都试着用Python实现一下。这里推荐三个不错的资源： 作者用python实现了线性回归、逻辑回归、BP神经网络，SVM、K-Mean、PCA、异常检测等算法。 https://github.com/lawlite19/MachineLearning_Python 作者将统计学习方法第一版每一章的算法用自己的方式实现一遍，这可是被李航老师点赞的项目！ https://github.com/WenDesi/lihang_book_algorithm 普林斯顿博士后 David Bourgin 最近开源的项目：用 NumPy 手写所有主流 ML 模型，看了一下，代码可读性极强。 项目地址：https://github.com/ddbourgin/numpy-ml 文档地址：https://numpy-ml.readthedocs.io/ 5.2 100天搞定机器学习系统（连载中） 大家好，100天搞定机器学习前54天是对Avik-Jain开源项目100-Days-Of-ML-Code的翻译+自己的理解 https://github.com/Avik-Jain/100-Days-Of-ML-Code 但是这个项目到54天就鸽掉了，十分可惜。 从第55天开始，我将续写这个栏目。 由于之前的文章太多参考Avik-Jain，我也将不定期对之前的章节进行重置。欢迎star https://github.com/tjxj/100-Days-Of-ML-Code 100天搞定机器学习|Day1数据预处理 100天搞定机器学习|Day2简单线性回归分析 100天搞定机器学习|Day3多元线性回归 100天搞定机器学习|Day4-6 逻辑回归 100天搞定机器学习|Day7 K-NN 100天搞定机器学习|Day8 逻辑回归的数学原理 100天搞定机器学习|Day9-12 支持向量机 100天搞定机器学习|Day11 实现KNN 100天搞定机器学习|Day13-14 SVM的实现 100天搞定机器学习|Day15 朴素贝叶斯 100天搞定机器学习|Day16 通过内核技巧实现SVM 100天搞定机器学习|Day17-18 神奇的逻辑回归 100天搞定机器学习|Day19-20 加州理工学院公开课：机器学习与数据挖掘 100天搞定机器学习|Day21 Beautiful Soup 100天搞定机器学习|Day22 机器为什么能学习？ 100天搞定机器学习|Day23-25 决策树及Python实现 100天搞定机器学习|Day26-29 线性代数的本质 100天搞定机器学习|Day 30-32 微积分的本质 100天搞定机器学习|Day33-34 随机森林 100天搞定机器学习|Day35 深度学习之神经网络的结构 100天搞定机器学习|Day36 深度学习之梯度下降算法 100天搞定机器学习|day37 无公式理解反向传播算法之精髓 100天搞定机器学习|day38 反向传播算法推导 100天搞定机器学习|day39 Tensorflow Keras手写数字识别 100天搞定机器学习|day40-42 Tensorflow Keras识别猫狗 100天搞定机器学习|day43 几张GIF理解K-均值聚类原理 100天搞定机器学习|day44 k均值聚类数学推导与python实现 100天搞定机器学习|day45-53 《Python数据科学手册》 100天搞定机器学习|day54 聚类系列：层次聚类原理及案例 100天搞定机器学习|Day55 最大熵模型 100天搞定机器学习|Day56 随机森林工作原理及调参实战（信用卡欺诈预测） 100天搞定机器学习|Day57 Adaboost知识手册(理论篇) 100天搞定机器学习|Day58 多分类机器学习中数据不平衡的处理（NSL-KDD 数据集+LightGBM) 100天搞定机器学习|Day59 硬核拆解GBDT 100天搞定机器学习|Day60 遇事不决，XGBoost 100天搞定机器学习|Day61 手算+可视化，彻底理解XGBoost 100天搞定机器学习|Day62 随机森林调参实战 100天搞定机器学习|Day63 彻底掌握 LightGBM 番外： 100天搞定机器学习：模型训练好了，然后呢？ 100天搞定机器学习：写YAML配置文件 5.3 回归 常见的七种回归技术 「回归分析」知识点梳理 广义线性模型 忘掉sklearn，用Python徒手写线性回归 机器学习算法之岭回归、Lasso回归和ElasticNet回归 5.4 逻辑回归 逻辑回归模型10问10答 5.5 决策树 决策树（Decision Tree）ID3算法 决策树（Decision Tree）C4.5算法 决策树（Decision Tree）CART算法 【算法系列】决策树 ID3、C4.5、CART三种决策树的区别 [最全整理]关于决策树的一切 机器学习基础：可视化方式理解决策树剪枝 机器学习：不要低估树模型的威力 决策树算法的原理（接地气版） 5.6 主成分分析 【算法系列】主成分分析的数学模型 【算法系列】主成分分析的几何意义 【算法系列】主成分分析的推导过程 换个姿势看马氏距离和主成分分析 5.7 随机森林 随机森林算法入门(python) 随机森林是我最喜欢的模型 5.8 XGBoost XGBoost你真的懂吗？我不信….. 周志华等人提出sGBM：可微XGBoost算法，性能更强更快！ GBDT、XGBoost、LightGBM的区别和联系 机器学习：XGBoost vs 神经网络 5.9 聚类 聚类算法使用小结 如何正确使用「K均值聚类」？ 四种聚类方法之比较 5.10 贝叶斯 贝叶斯：没有人比我更懂南京市长江大桥 机器学习基础：朴素贝叶斯及经典实例讲解 实例详解贝叶斯推理的原理 探索贝叶斯定理蕴藏的智慧与哲学 GSU 2021 | 贝叶斯数据分析课程开讲 从贝叶斯定理到概率分布：详解概率论基本定义 【深度好文】Python实现 “贝叶斯” 统计推断！ 【机器学习基础】深入浅出经典贝叶斯统计 【机器学习基础】分类算法之贝叶斯网络 5.11 SVM SVM的数学推导原理 支持向量机背后的数学 -对于SVM背后的数学和理论解释的快速概览及如何实现 我以前一直没有真正理解支持向量机，直到我画了一张图！ 机器学习基础篇：支持向量机（SVM）理论与实践 5.12 降维 为什么要进行数据降维? 所谓降维，即用一组个数为 d 的向量 Zi 来代表个数为 D 的向量 Xi 所包含的有用信息，其中 d&lt;D，通俗来讲，即将高维度下降至低维度；将高维数据下降为低维数据。 通常，我们会发现大部分数据集的维度都会高达成百乃至上千，而经典的 MNIST，其维度都是 64。 但在实际应用中，我们所用到的有用信息却并不需要那么高的维度，而且每增加一维所需的样本个数呈指数级增长，这可能会直接带来极大的「维数灾难」;而数据降维就可以实现： 使得数据集更易使用 确保变量之间彼此独立 降低算法计算运算成本 去除噪音一旦我们能够正确处理这些信息，正确有效地进行降维，这将大大有助于减少计算量，进而提高机器运作效率。而数据降维，也常应用于文本处理、人脸识别、图片识别、自然语言处理等领域。 网上关于各种降维算法的资料参差不齐，同时大部分不提供源代码。这里有个 GitHub 项目整理了使用 Python 实现了 11 种经典的数据抽取(数据降维)算法，包括：PCA、LDA、MDS、LLE、TSNE 等，并附有相关资料、展示效果;非常适合机器学习初学者和刚刚入坑数据挖掘的小伙伴。 基于 Python 的 11 种经典数据降维算法 Word2Vec是如何工作的？它和LDA有什么区别与联系？ 一文掌握降维算法三剑客 PCA、t-SNE 和自动编码器 基于 Python 的 11 种经典数据降维算法 5.13 其他 马尔科夫决策过程基本概念详解 各种分类算法的优缺点 数据分析师最常用的10个机器学习算法！ 回归、分类与聚类：三大方向剖解机器学习算法的优缺点（附Python和R实现） 来!一起捋一捋机器学习分类算法 如何选择机器学习模型？ sklearn常用的API参数解析：线性回归 sklearn.decomposition.PCA 参数速查手册 Ridge回归 sklearn API参数速查手册 5.14 学习方法 清华学生总结的算法学习方法:做中学 美团技术专家云鹏:写给工程师的十条精进原则 实际工作中，算法工程师需要哪些技能？ 扒一扒改变世界的十大算法 【计算机视觉发展史】：目标检测二十年 从小白视角理解『数据挖掘十大算法』 "],["机器学习项目实战.html", "第 6 章 机器学习项目实战 6.1 数据分析篇 6.2 机器学习篇 6.3 深度学习 6.4 其他", " 第 6 章 机器学习项目实战 6.1 数据分析篇 COVID-19数据分析实战：数据清洗篇 COVID-19数据分析实战：统计分析及可视化 COVID-19数据分析实战：WordCloud 词云分析 COVID-19数据分析实战：用Python绘制动态排名视频 Python数据分析实战：用Pandas 处理时间序列 Python数分实战 | 玩转百万级游戏数据（附练手源数据） 6.2 机器学习篇 随机森林调参实战（信用卡欺诈预测） 多分类机器学习中数据不平衡的处理（NSL-KDD 数据集+LightGBM) 万字案例 | 用Python建立客户流失预测模型（含源数据+代码） 干货 | 基于 Python 的信用评分模型实战！ 6.3 深度学习 深度学习训练过程可视化（附github源码） 实战系列: 使用 PyTorch 检测人脸特征点 6.4 其他 用AI炒股：如何使用强化学习建立可盈利的算法交易系统 卧槽，我学会了用Python预测股票价格 用Python让特朗普和蒙娜丽莎深情合唱《Unravel》 Python爬取虎牙直播颜值区美女主播照片 5行Python就能爬取 3000+ 上市公司的信息？ 一篇文章教会你用Python抓取抖音app热点数据 从未这样玩过！第一次使用 Python 分析 14 亿条数据 "],["深度学习基础.html", "第 7 章 深度学习基础 7.1 入门教程 7.2 神经网络 7.3 深度学习 7.4 资源推荐 7.5 其他", " 第 7 章 深度学习基础 7.1 入门教程 台大喊你来上课，深度学习优化，免费的哟 【2021最新版】台大美女教授陈缊侬：《应用深度学习》 纽约大学：《深度学习》2021年课程全部在线可看！含中文课件 斯坦福《CS230：深度学习》2021课程，吴恩达带队授课 7.2 神经网络 神经网络入门 神经网络的局限 神经网络！图解！ 神经网络内部长啥样？ 常见的神经网络求导总结！ 神经网络的可解释性综述！ 学完NumPy，直接开始玩神经网络 无公式理解反向传播算法之精髓 神经网络七十年：回顾与展望 深度理解：神经网络的训练过程 神经网络为何非要激活函数？ 神经网络防止过拟合的8种优化方法 机器学习：神经网络训练失败的原因 收藏 | 深度学习中神经网络的可视化解释！ 神经网络的5种常见求导，附详细的公式过程 机器学习必知必会的 6 种神经网络类型 为什么神经网络能工作？为什么它们经常不起作用？ 从 ReLU 到 GELU，一文概览神经网络的激活函数 神经网络其实和人一样懒惰，喜欢走捷径 7.3 深度学习 【深度学习】正则化入门 【算法系列】深度学习中的正则化 一文读懂深度学习：从神经元到BERT 吴恩达深度学习课程笔记（手绘插画） 机器学习、深度学习思维导图 深度学习与传统 CS 的教学和课程有什么区别？ 万字长文！机器学习与深度学习核心知识点总结 深度学习初探：使用Keras创建一个聊天机器人 跟着漂亮小姐姐从0到1学习Tensorflow 一文回顾深度学习十年发展 超全！一文看懂 9 种Transformer结构！ BERT大火却不懂Transformer？读这一篇就够了 360度无死角、近距离看「CNN」训练，是种什么体验？网友：美得不真实 图解：卷积神经网络数学原理解析 深度学习 GPU 最全对比，到底谁才是性价比之王？ 人人都能看懂的LSTM介绍及反向传播算法推导 【读懂系列】一文读懂深度学习中的各种卷积 专访Keras之父：关于深度学习、Keras的诞生和给初学者的建议 7.4 资源推荐 由川大一名优秀毕业生创建。这是一个整合 AI 相关知识的项目，通过广大网友的集思广益, 形成内容充实，覆盖全面的 AI 相关知识文集。 目前，该项目的 star 数已经超过 24000，有 6700 多次 Fork，项目地址： https://github.com/scutan90/DeepLearning-500-questions） 目前，全书有近 30 万字，初步分为 18 个章节。这 18 个章节涉及到深度学习的各个方面： 深度学习500问，以问答形式对常用的概率知识、线性代数、机器学习、深度学习、计算机视觉等热点问题进行阐述，以帮助自己及有需要的读者。 7.5 其他 深度学习概述 深度学习简史 我的深度学习之路 深度学习提速10倍！ 微软开源深度学习库 【图解】循环神经网络RNN BERT模型为什么这么强? 深度学习博士的灵魂拷问 一文读懂循环神经网络！ 适合入门的深度学习综述 深度学习的四个学习阶段！ 一个CV算法工程师的小反思 3万块配一台电脑玩深度学习 训练深度学习模型，46页ppt 卷积神经网络（CNN）数学原理解析 周志华教授：关于深度学习的一点思考 零基础科普：4种简单推荐算法背后的原理 神经网络debug太难了，这里有六个实用技巧 吴恩达：22张图全解深度学习知识 【深度学习】发展的必然及未来的思考 深度学习和人工智能：背后最重要的统计学思想 【硕博士推荐】国内有哪些不错的CV(计算机视觉)团队? 终于有人把卷积神经网络（CNN）讲明白了 【深度学习】聊聊Keras的特点及其与其他框架的关系 深度学习常用损失函数总览：基本形式、原理、特点 为什么有些数学专业的看不惯甚至鄙视 Deep Learning？ 【快得吓人】苹果史上最强芯片M1跑神经网络 复旦大学肖仰华老师-《知识图谱-概念与技术》课程ppt整理分享 "],["工具和框架篇.html", "第 8 章 工具和框架篇 8.1 常见框架 8.2 sklearn 8.3 TensorFlow VS PyTorch 8.4 Tensorflow 8.5 Pytorch 8.6 其他", " 第 8 章 工具和框架篇 8.1 常见框架 一、SciKit-learn scikit-learn 是一种强大的基于 Python 语言的机器学习算法库（https://scikit-learn.org/stable/）。其中，包含了算法预处理，模型参数择优，回归与分类等算法，官方文档包含了每一种算法的例子，代码简洁优美，可视化了每一种算法结果，即能学习 python，也是帮助开发者更好理解机器学习算法的便利工具。 尤其在监督学习部分，Scikit-learn 提供了广义线性模型、支持向量机、最近邻算法、高斯过程、朴素贝叶斯、决策树和集成方法等算法教程，同时还介绍了特征选择、随即梯度下降算法、线性与二次判别分析等在监督学习中非常重要的概念；而在半监督学习中的标签传播算法和无监督学习中的聚类与降维算法方面，也有非常多的教程。 GitHub 地址： https://github.com/scikit-learn/scikit-learn 二、TensorFlow TensorFlow 是用于机器学习的端到端开源平台（https://tensorflow.org），也是 2019 年度 GitHub 上最受欢迎的项目。 它具有工具、库、社区资源全面且灵活的生态系统，提供稳定的 Python 和 C ++ API，以及其他语言的非保证向后兼容 API；能够帮助开发者们在 ML 领域的研究与发展，并使开发人员轻松构建和部署 ML 支持的应用程序。 GitHub 地址： https://github.com/tensorflow/tensorflow 三、PyTorch 作为 TensorFlow 强有力竞争对手的 PyTorch，也是目前较为主流的深度学习工具之一。 PyTorch 是一个开源的机器学习框架，提供了两个高级功能，包括：具有强有力的 GPU 加速度的张量计算（如 NumPy），以及基于磁带自动调整系统构建的深度神经网络；可加快从研究原型到生产部署的过程。 此前，OpenAI 官方宣布了「全面转向 PyTorch」的消息，计划将自家平台的所有框架统一为 PyTorch，也进一步体现了 PyTorch 在深度学习方面的潜力。 GitHub 地址： https://github.com/pytorch/pytorch 四、MXNET MXNet 是一个功能齐全，可编程和可扩展的深入学习框架，支持最先进的深入学习模式（https://mxnet.apache.org/）。 MXNet 提供了混合编程模型（命令式和声明式）和大量编程语言的代码（包括 Python、C++、R、Scala、Julia、Matlab 和 JavaScript）的能力，是一个易安装易上手的开源深度学习工具，它提供了一个 python 接口 gluon，能够让开发者迅速搭建起神经网络，并进行高效训练。 GitHub 地址： https://github.com/apache/incubator-mxnet 五、BERT BERT 是一个基于双向 Transformer 的大规模预训练语言模型，用于对大量未标记的文本数据进行预训练，以学习一种语言表示形式，这种语言表示形式可用于对特定机器学习任务进行微调。 BERT 被称为是 NLP 领域中里程碑的进展；目前，BERT 也是 NLP 深度学习中的重要组成部分，很多之后的自然语言处理模型都是在此基础上优化与改进而得。 GitHub 地址： https://github.com/google-research/bert 六、Transformers Transformers 是神经机器翻译中使用的一种神经网络，它主要涉及将输入序列转换为输出序列的任务，这些任务包括语音识别和文本转换语音。 这类任务需要「记忆」，下一个句子必须与前一个句的上下文相关联（这是相当关键的），以免丢失重要的信息。通过将 attention 应用到正在使用的单词上，则可以解决当句子太长的时，RNN 或 CNN 无法跟踪上下文和内容的问题。 GitHub 地址： https://github.com/huggingface/transformers 七、Spark MLlib Spark 是一个开源集群运算框架，也是现在大数据领域热门开源软件之一（https://spark.apache.org/mllib/）。 由于 Spark 使用了内存内运算技术，它在内存上的运算速度比 Hadoop MapReduce 的运算速度快上 100 倍；这也使得 Spark MLlib 分布式计算框架运行非常高效、快速。它可以实现大部分机器学习，如：聚类、分类、回归等算法，并允许将数据加载至集群内存，多次对其进行查询，所以非常适合用于机器学习算法。 GitHub 地址： https://github.com/apache/spark 8.2 sklearn 8.2.1 如何正确地实用sklearn By Andreas Muller–Scikit learn 的核心开发人员，书籍《Python 机器学习入门》的作者，哥伦比亚大学数据科学研究所的科学家、讲师。 1.对于 Scikit 学习，每个人都可能在使用管道。如果你不使用管道，那你可能有些地方做错了。2 年前，我们引入了列转换器，它允许你处理具有连续和分类变量的数据，或者处理其他类型 One-Hot 编码器时，一切都很好。 2。我在机器学习中看到的一个常见错误是没有对度量标准给予足够的关注。Scikit-learn 将精度用作默认度量。但一旦你有了一个不平衡的数据，准确度是一个可怕的指标。你真的应该考虑使用其他指标。我们不会改变默认的度量标准，因为准确性被广泛使用，而且有如此清楚的解释。但是，在机器学习中，查看其他度量并为你的用例考虑是否使用它们是最常见的问题。 什么是管道？如果它不准确，还有什么其他指标更适合机器学习？ 在 Scikit-learn 中，每个 ML 模型都封装在一个称为「估计器」的简单 python 类中。通常在机器学习过程中，你可能会有一个带有一系列预处理步骤的分类器。管道允许你封装所有预处理步骤、特征选择、缩放、变量编码等，以及通常在单个估计器中具有的最终监督模型。 所以你有一个对象来完成你所有的工作。它非常方便，能够使编写错误的代码出现的更少，因为它可以确保你正的训练集和测试集是一致的。最后，你应该使用交叉验证或网格搜索 CV。在这种情况下，重要的是所有的预处理都在交叉验证循环中进行。如果在交叉验证循环之外进行功能选择，可能会发生非常糟糕的事情。但在你的管道中，你知道一切都在交叉验证循环中。 8.2.2 sklearn入门及技巧篇 极简Scikit-Learn入门 Python数据分析之scikit-learn与数据预处理 机器学习库 Scikit-learn 版本更新了，10个新玩法！ 8.3 TensorFlow VS PyTorch TensorFlow还是PyTorch？我建议你听我的 PyTorch称霸学界，TensorFlow固守业界，ML框架之争将走向何方？ 8.3.1 安装问题 手把手教你如何在阿里云ECS搭建Python TensorFlow Jupyter TensorFlow 适合业界，PyTorch 适合学界？2022 了，还是这样吗？ 8.4 Tensorflow 本项目是TensorFlow2.0学习笔记，主要参考官方文档，此外也添加个人许多个人使用心得体会等内容，本项目所有笔记也发布在博客园等平台，希望对你有所帮助。 TensorFlow2.0正式版在10月初已经发布，相比于1.X，2.0版的TensorFlow修改的不是一点半点，这些修改极大的弥补了1.X版本的反人类设计，提升了框架的整体易用性，绝对好评！ TensorFlow2.0（一）：基本数据结构——张量 TensorFlow2.0（二）：数学运算 TensorFlow2.0（三）：张量排序、最大最小值 TensorFlow2.0（四）：填充与复制 TensorFlow2.0（五）：张量限幅 TensorFlow2.0（六）：数据预处理中的Dataset TensorFlow2.0（七）：激活函数 TensorFlow2.0（八）：误差计算——损失函数总结 TensorFlow2.0（9）：TensorBoard可视化 TensorFlow2.0（10）：加载自定义图片数据集到Dataset TensorFlow2.0（11）：tf.keras建模三部曲 TensorFlow2.0（12）：模型保存与序列化 TensorFlow 2.4 来了：新功能解读 Tensorflow的妙用 8.5 Pytorch 8.5.1 Pytorch教程 这是由 Stéphane d’Ascoli, Andrei Bursuc和Timothée Lacroix一起带来的“利用 PyTorch 进行深度学习的实践之旅”课程。 这个教程的优点有这么几个： PPT讲解和实践教程穿插，好懂； 实践教程都是Github项目，数据、代码一应俱全； 教程特别详细，代码基础差也可以上手。 课程网址: http://www.dataflowr.com GitHub链接: https://github.com/mlelarge/dataflowr 8.5.2 Pytorch安装与使用 PyTorch在Windows下的安装 不能更详细的PyTorch环境安装与配置 17种深度强化学习算法用Pytorch实现（附链接） 保姆级教程，用PyTorch构建第一个神经网络 8.6 其他 科技公司最爱的50款开源工具，你都用过吗？ Excel表格中最经典的36个小技巧，全在这儿了 一千行MySQL命令 用手机玩转BP神经网络 这个神级编辑器给 Excel 加上了 Python 功能！ 强烈安利这款功能强悍的机器学习可视化工具 Python新工具：用三行代码提取PDF表格数据 不废话，上代码！7个方向，近100条 PyTorch 功能代码片段合辑 Keras vs PyTorch，哪一个更适合做深度学习？ 剑桥大学：PyTorch 已 碾 压 TensorFlow "],["开源项目推荐.html", "第 9 章 开源项目推荐", " 第 9 章 开源项目推荐 Github：五个评分最高的机器学习项目 Github标星3K+，热榜第三，一网打尽数据科学速查表 1、最佳Python代码库 Python资源精选列表1：Python框架、库、软件以及资源精选列表。 （https://github.com/vinta/awesome-python） Python资源精选列表2：精心筛选的一组Python框架、库、软件以及资源列表。 （https://github.com/trananhkma/fucking-awesome-python） Python精选应用程序：将近400个开源Python应用程序，按主题陈列，且附有使用apatite根据结构化数据生成的代码库、文档等链接。 （https://github.com/mahmoud/awesome-python-applications） Pytorch：与Pytorch相关的库，Pytorch是有名的张量与动态神经网络机器学习框架。 （https://github.com/bharathgs/Awesome-pytorch-list） Python异步：精心挑选的Python异步框架、库、软件以及资源清单。 （https://github.com/timofurrer/awesome-asyncio） Jupyter：非常了不起的Jupyter项目、库以及资源的清单。你可以利用Jupyter创建和共享包含实时代码、方程式、可视化效果、文本等的Python文档。 （https://github.com/markusschanta/awesome-jupyter） Python书单: 有关Python的最佳书单！ （https://github.com/Junnplus/awesome-python-books） 2、图书 Python指南：关于Python日常安装、配置和使用的最佳实践手册，包括pip、numpy、virtualenv等的介绍。 （https://github.com/realpython/python-guide） Python简明教程：面向初学者的Python教程，你只需要知道如何保存一个保存文本文件即可开始学习。 （https://github.com/swaroopch/byte-of-python） Cosmic Python：以python方式的应用程序架构模式来管理复杂性，O’Reilly的免费书籍！ （https://github.com/cosmicpython/book） Python机器学习：该库包含经典的机器学习教程的Notebook代码。 （https://github.com/rasbt/python-machine-learning-book-3rd-edition） 3、面试问题 Python经典编程面试题：经典的Python编程面试问题集，请不要作弊！ （https://github.com/StBogdan/CTCI_python） Python交互式编程题：使用Anki学习卡片提供了120多个持续更新、交互式、测试驱动的编程面试题。 （https://github.com/donnemartin/interactive-coding-challenges） Python面试题集：Python面试中经常遇到的问题。 （https://github.com/sigmavirus24/python-interview-questions） Python面试题集2：额外的300多个Python面试题。 （https://github.com/learning-zone/python-interview-questions） 4、数据结构与算法 Python数据结构与算法：Python 3的数据结构与算法，最简单、最整洁的实现，已获1.8万颗星！ （https://github.com/keon/algorithms） Udemy算法、数据结构与面试课程：该库中包含Udemy课程附带的notebook，可帮助你准备面试。 （https://github.com/jmportilla/Python-for-Algorithms--Data-Structures--and-Interviews） Python算法：算法和数据结构的实现，快乐的学习！ （https://github.com/prakhar1989/Algorithms） 5、Python资源 GitHub的Python趋势列表：GitHub提供的Python流行代码库。 （https://github.com/trending/python） PEP 8–Python样式指南检查器：该工具可以按照PEP 8样式约定检查你的Python代码。 （https://github.com/treyhunner/pep8） Google样式指南：Google推荐的Python样式指南。 （https://github.com/google/styleguide） Python增强建议：Python增强建议，PEP官方索引。 （https://github.com/python/peps） 6、学习Python Python Koans：一个交互式的教程，可通过测试来学习Python，测试驱动开发的入门教程。 （https://github.com/gregmalcolm/python_koans） 基于项目的学习：面向项目的编程教程列表，包括构建网络抓取工具、应用程序机器人等。 （https://github.com/tuvtran/project-based-learning#python） 通过JupyterNotebook学习Python 3：通过一系列交互式Jupyter Notebook教你学习Python 3。 （https://github.com/jerry-git/learn-python3） "],["免费资料下载.html", "第 10 章 免费资料下载 10.1 Python 10.2 机器学习 10.3 深度学习 10.4 其他 10.5 数据集 10.6 R", " 第 10 章 免费资料下载 10.1 Python 给专业选手的 Python 笔记 Python办公自动化全套代码 南京大学的Python数据分析课件 经典教材《统计学习导论Python版 87页新书《给数据科学家的python技能秘籍pdf 10.2 机器学习 LightGBM中文文档 机器学习统计学，476页 机器学习圣经PRML中文版 经典著作《机器学习：概率视角 清华大学出版！《机器学习导论PDF下载 斯坦福新书《决策算法，694页PDF免费下载 【清华大学王东老师】现代机器学习技术导论 80页笔记看遍机器学习基本概念、算法、模型 【高清大图下载】机器学习从入门到精通思维导图 阿里达摩院《机器学习算法学习指南火了，限时开放下载！ 清华大学《高级机器学习课件和专家特邀报告 神经网络首看书《神经网络与机器学习，中英文版本PDF下载 B站资源推荐：复旦大学机器学习、深度学习公开课，附PDF课件下载 机器学习基础教材-《统计学习与数据分析介绍免费pdf分享 PDF下载！复旦研究生翻译《可解释机器学习》的中文版来了 威斯康辛大学《机器学习导论》 机器学习画图神器来啦！PPT下载！ 【资料下载】机器学习重点概念解析合集 【PPT】台大李宏毅《机器学习》2021课程完结！视频、加上答疑书！ 【下载】80页笔记看遍机器学习基本概念、算法、模型 10.3 深度学习 深度学习四大名著 吴恩达亲自推荐的NLP课程开讲，免费！ 吴恩达点赞的深度学习精炼图笔记 《基于PyTorch的自然语言处理》 吴恩达新书《Machine Learning Yearning》完整中文版 PPT课件下载！哈佛大学《CS50 Python人工智能入门课程 全球175所大学教材：《动手学深度学习（中文版下载） 10.4 其他 鸿蒙操作系统入门到精通 美团《数据结构入门开放下载！ 12个神经网络可视化工具，很酷！ 麻省理工学院计算机课程【中文版】 无意中发现的另一本 统计学入门好书 靠这2本算法书，我进入了梦寐以求的大厂！ 重温经典：台大李宏毅的线性代数公开课 南京大学计算机系人工智能学院《模式识别》开课 斯坦福大学——人工智能本科4年课程清单 北大「最优化：建模、算法与理论」新书, 附579页电子版与课件 国家精品公开课：Python网络爬虫与信息提取+数据分析与可视化 华科数学系教授团队打造的概率与数理统计免费视频公开课 李航老师《统计学习方法》(第2版）课件分享，附下载 10.5 数据集 机器学习中最大的数据集资源列表，作者整理了一个机器学习数据集相关的列表集合，可用于机器学习实验。 这种资源可以减少你在线查找数据集的时间，该数据集根据不同的用途/领域划分，包括：CV、NLP、自动驾驶、QA、音频和医疗。你还能根据许可证类型进行划分。 地址：https://www.datasetlist.com/ 机器学习数据集汇总 下载kaggle数据集的妙招 23个优秀的机器学习数据集 机器学习顶级数据资源 Top 8 玩机器学习，再也不缺数据集了 Tianchi发布完整开源机器学习数据集！ 14个数据分析和机器学习项目！附数据集 特朗普号没了，幸好保存了所有的推特数据 吐血整理：43种机器学习开源数据集（附地址/调用方法） 10.6 R BOOKDOWN官网（bookdown.org）上有不少人发布了自己的电子书，完全免费开源， 我筛选了5本感觉很不错的数据科学方面的书，打开图片下方链接即可阅读！ 5本数据科学电子书 https://r-graphics.org/ https://r4ds.had.co.nz/ https://rafalab.github.io/dsbook/ https://www.tidytextmining.com/ https://otexts.com/fpp2/ "],["机器学习论文.html", "第 11 章 机器学习论文 11.1 如何高效读论文？ 11.2 机器学习、AI必读论文 11.3 深度学习必读论文", " 第 11 章 机器学习论文 11.1 如何高效读论文？ 来源：量子位 第一遍：快速预览，把握概要。 拿到一篇新论文，第一遍阅读要花多长时间？5-10分钟足以。 不是每一篇论文都干货满满，所以初次见面，先打个印象分，再决定是否继续，是更为高效的方法。 具体操作如下： 1、仔细阅读标题、摘要和简介。 2、先忽略内容，读一读文章中的每个小标题。 3、如果有数学内容，先大致浏览，确定其理论基础。 4、读结论。 5、浏览参考文献，如果有你已经读过的，把它们勾选出来。 如此读完第一遍，你需要问问自己以下几个问题： 1、分类：这是什么类型的论文？ 2、背景：与哪些其他论文相关？基于何种理论基础来分析问题？ 3、正确性：论文的假设看起来正确吗？ 4、贡献：论文的主要贡献是什么？ 5、清晰度：这篇论文写得好吗？ 当你心中有了这些答案，你也就知道自己该不该真正精读这篇论文了。 P.S. 这里也涉及到撰写论文的一个小技巧：结构尽量清晰，要点尽量突出，让审稿人第一遍就能get到。 第二遍：抓住重点，暂略细节 当你判定一篇论文值得一读，就可以把它加入第二遍阅读的队列。 第二遍阅读，就要好好看看论文内容了，投入的时间大概在1个小时左右。 不过，不要纠结于没见过的术语，也不要沉迷于证明推导的细节：把它们记下来，先略过。 这一遍阅读中，有两个小技巧： 1、仔细查看论文中的图表。关注一下细节：坐标轴是否正确标记？结论是否具有统计意义？往往细节之中，就能窥见真正出色的工作和水文之间的区别。 2、标记论文中涉及的、你并未读过的参考文献，之后进一步阅读。 读完第二遍，你应该能掌握论文内容，总结全文主旨了。 不过，有时候即使是这样读完一遍，也未必就能读懂论文：论文可能涉及你陌生的领域，有太多陌生术语；作者可能采用了你不了解的证明或实验技术；甚至，这篇论文可能写得不行。 那么，就进入最后一步吧。 第三遍：重构论文，注重细节 要想完全理解论文，就需要展开第三遍阅读：跟随作者的思路，在脑海中重现论文内容。 将重现的结果与实际论文进行比较，就可以轻松看出论文的创新点，找到文中隐含的假设，捕获隐藏在实验和技术分析中的潜在问题和引文缺失。 进入第三遍，最重要的事情强调三遍：细节！细节！细节！ 找出作者陈述中的每一个假设，亲自挑战它，提出自己的思考。如此，对于论文的证明和其中的技术，你便会有更为深刻的理解。 One More Thing：文献调研怎么做？ 说到读论文，是不是想起了被文献综述统治的恐惧？ Srinivasan Keshav教授同样有“三步法”要传授诸位。 首先，善用学术搜索引擎（如谷歌学术），找出3-5篇相关领域近期最高引用的论文。 了解这些论文的工作原理，阅读其中related work的部分。幸运的话，这些内容能直接帮你完成文献综述。 第二步，在这些论文的参考文献中找出其共同引用的论文，或重复出现的作者姓名。 访问这些关键人物的网站，查看他们近期发表的论文，也可以看看他们都参加了哪些顶级会议。 第三步，访问顶级会议的网站，浏览它们最近的会议记录。 通过“三遍论”的第一遍阅读快速识别高质量的相关工作。 汇总这一步中查找出的论文和第二步中的高引论文，基本上就能构成你文献综述的初版内容啦。 最后，三步法可以迭代进行。 11.2 机器学习、AI必读论文 人工智能必看的45篇论文 机器学习领域最全综述列表！ 【必读经典】机器学习论文清单 深度学习领域，最惊艳的论文！ 全网最全的论文下载渠道（免费） 李沐大佬公开课：深度学习论文精读 2021年充满惊喜的人工智能论文综述 【PDF下载】如何写一篇牛逼的机器学习论文？17页实操指南 覆盖近2亿篇论文还免费！沈向洋旗下团队「读论文神器」 11.3 深度学习必读论文 1 ImageNet Classification with Deep Convolutional Neural Networks 下载地址：http://papers.nips.cc/paper/4824-imagenet-classification-with-deep-convolutional-neural-networks.pdf 2 Using Very Deep Autoencoders for Content Based Image Retrieval 下载地址：http://www.cs.toronto.edu/~hinton/absps/esann-deep-final.pdf 3 Learning Deep Architectures for AI 下载地址：http://www.iro.umontreal.ca/~lisa/pointeurs/TR1312.pdf 4 CMU’s list of papers 下载地址：http://deeplearning.cs.cmu.edu/ 5 Neural Networks for Named Entity Recognition zip 下载地址：https://nlp.stanford.edu/~socherr/pa4_ner.pdf 6 Geoff Hinton’s reading list (all papers) 下载地址：http://www.cs.toronto.edu/~hinton/deeprefs.html 7 Supervised Sequence Labelling with Recurrent Neural Networks 下载地址：http://www.cs.toronto.edu/~graves/preprint.pdf 8 Statistical Language Models based on Neural Networks 下载地址：http://www.fit.vutbr.cz/~imikolov/rnnlm/thesis.pdf 9 Training Recurrent Neural Networks 下载地址：http://www.cs.utoronto.ca/~ilya/pubs/ilya_sutskever_phd_thesis.pdf 10 Recursive Deep Learning for Natural Language Processing and Computer 下载地址：Vision https://nlp.stanford.edu/~socherr/thesis.pdf 11 Bi-directional RNN 下载地址：https://www.di.ufpe.br/~fnj/RNA/bibliografia/BRNN.pdf 12 LSTM 下载地址：http://web.eecs.utk.edu/~ielhanan/courses/ECE-692/Bobby_paper1.pdf 13 GRU - Gated Recurrent Unit 下载地址：https://arxiv.org/pdf/1406.1078v3.pdf 14 GFRNN 下载地址：https://arxiv.org/pdf/1502.02367v3.pdf 15 LSTM: A Search Space Odyssey 下载地址：https://arxiv.org/pdf/1503.04069v1.pdf 16 A Critical Review of Recurrent Neural Networks for Sequence Learning 下载地址：https://arxiv.org/pdf/1506.00019v1.pdf 17 Visualizing and Understanding Recurrent Networks 下载地址：https://arxiv.org/pdf/1506.02078v1.pdf 18 Wojciech Zaremba, Ilya Sutskever, An Empirical Exploration of Recurrent Network Architectures 下载地址：http://proceedings.mlr.press/v37/jozefowicz15.pdf 19 Recurrent Neural Network based Language Model 下载地址: http://www.fit.vutbr.cz/research/groups/speech/publi/2010/mikolov_interspeech2010_IS100722.pdf 20 Extensions of Recurrent Neural Network Language Model 下载地址：http://www.fit.vutbr.cz/research/groups/speech/publi/2011/mikolov_icassp2011_5528.pdf 21 Recurrent Neural Network based Language Modeling in Meeting Recognition 下载地址：http://www.fit.vutbr.cz/~imikolov/rnnlm/ApplicationOfRNNinMeetingRecognition_IS2011.pdf 22 Deep Neural Networks for Acoustic Modeling in Speech Recognition Speech 下载地址：http://cs224d.stanford.edu/papers/maas_paper.pdf 23 Reinforcement Learning Neural Turing Machines 下载地址：https://arxiv.org/pdf/1505.00521v1.pdf 24 Learning Phrase Representations using RNN Encoder-Decoder for Statistical Machine Translation 下载地址：https://arxiv.org/pdf/1406.1078v3.pdf 25 Google - Sequence to Sequence Learning with Neural Networks 下载地址：http://papers.nips.cc/paper/5346-sequence-to-sequence-learning-with-neural-networks.pdf 26 Memory Networks 下载地址：https://arxiv.org/pdf/1410.3916v10.pdf 27 Policy Learning with Continuous Memory States for Partially Observed Robotic Control 下载地址：https://arxiv.org/pdf/1507.01273v1.pdf 28 Microsoft - Jointly Modeling Embedding and Translation to Bridge Video and Language 下载地址：https://arxiv.org/pdf/1505.01861v1.pdf 29 Neural Turing Machines 下载地址：https://arxiv.org/pdf/1410.5401v2.pdf 30 Ask Me Anything: Dynamic Memory Networks for Natural Language Processing 下载地址：https://arxiv.org/pdf/1506.07285v1.pdf 31 Mastering the Game of Go with Deep Neural Networks and Tree Search 下载地址：https://www.nature.com/articles/nature16961 32 Batch Normalization 下载地址：https://arxiv.org/abs/1502.03167 33 Residual Learning 下载地址：https://arxiv.org/pdf/1512.03385v1.pdf 34 Image-to-Image Translation with Conditional Adversarial Networks 下载地址：https://arxiv.org/pdf/1611.07004v1.pdf 35 Berkeley AI Research (BAIR) Laboratory 下载地址：https://arxiv.org/pdf/1611.07004v1.pdf 36 MobileNets by Google 下载地址：https://arxiv.org/abs/1704.04861 37 Cross Audio-Visual Recognition in the Wild Using Deep Learning 下载地址：https://arxiv.org/abs/1706.05739 38 Dynamic Routing Between Capsules 下载地址：https://arxiv.org/abs/1710.09829 39 Matrix Capsules With Em Routing 下载地址：https://openreview.net/pdf?id=HJWLfGWRb 40 Efficient BackProp 下载地址：http://yann.lecun.com/exdb/publis/pdf/lecun-98b.pdf 41 Recognition with Deep Recurrent Neural Networks 下载地址：http://cs224d.stanford.edu/papers/maas_paper.pdf "],["杂谈.html", "第 12 章 杂谈 12.1 数学的故事 12.2 统计学 12.3 大厂技术观察 12.4 程序人生 12.5 效率工具 12.6 其他", " 第 12 章 杂谈 12.1 数学的故事 数学专业劝退指南 马克思的数学手稿 数学中蕴含的人生哲理 一位数学天才的遭遇 10部顶级数学纪录片 可以用数学来证明的中文 上哔哩哔哩，探数学奥秘 数学仍然是人类的“火炬” 用人话说说希尔伯特空间 人民日报：数学有多重要？ 法国数学如此强大的原因！ 最速降线问题？数学家们吵疯了 改变世界面貌的十个数学公式 数学简史：现代数学的五大应用 数学史上10个备受质疑的伟大时刻 拿破仑时代的炮兵究竟数学要多好？ 微积分的发现是人类精神的最高胜利 数学家莱布尼茨：一个千古绝伦的大智者 拜伦之女，英国数学家，历史上第一位程序员 华为提出十大数学挑战！解出一个就是年薪百万！ 12.2 统计学 统计学的一百年 现代统计学的发展史 统计学权威盘点过去50年最重要的统计学思想 现代统计的思想飞跃：过去、现在到未来（伯克利丁鹏博士） 12.3 大厂技术观察 今日头条算法原理（全） 华为的数字化转型与数据治理 【干货】阿里巴巴的图像搜索架构 揭秘！阿里巴巴电商算法首次对外公开 今日头条、抖音推荐算法原理全文详解！ 腾讯：《2021 十大人工智能趋势》 一文了解滴滴与蚂蚁金服开源共建的SQLFlow 快手和苏黎世理工开源分布式训练框架 Bagua 资源分享：微博基于Flink的机器学习实践PPT 滴滴首席统计学家：数据产品的一些思考 美团技术团队：美团机器学习平台的演进过程 算法与数据中台：基于Google、Facebook与微博实践 微软在 GitHub 又一开源力作，代号「女娲」！ 12.4 程序人生 读博，我想好了！ 我在南大的七年 我在美团的八年 我在拼多多的三年 腾讯产品经理的一天 这5个程序员，改变了世界 小米雷军：我的程序员人生 裸辞接单第一个月，赚了 11K+ 很佩服的一个Google大佬，离职了 我在哥大读博的五年，万字总结 刚面试了一位46岁的程序员，思绪万千 李沐大神新作：用梯度下降来优化人生 反对李沐大佬：反向用随机梯度下降来优化人生 亚马逊首席科学家李沐博士：工作五年反思 张一鸣：我的大学四年收获及工作感悟 关于区块链，一些往事、一些八卦、一点看法 谷歌大脑高级研究科学家：我的六年机器学习博士生涯总结 北大读博手记：怎样完成自己的博士生涯？非常具有指导性！ 12.5 效率工具 再见，360安全卫士 SQL 语法速成手册 动图展示10大Git命令 再见，这些垃圾编程网站 打造一款高逼格的Vim神器 Markdown数学公式语法手册 详解R语言的高级数据结构 在公司内网搭建 pip 镜像站 彻底干掉了 Windows 的 cmd，爽！ 23 个非常实用的 Shell 拿来就用脚本实例 让你纵横 GitHub 的五大神器 干掉 LaTeX ！用BookDown写本书 19 个接私活平台汇总升级版，你有技术就有钱 提高github下载速度的方法「100%有效」可达到2MB/s 国内Github下载很慢，用上了这个插件后，下载速度嗖嗖嗖的~！ 程序员该如何把 Windows 系统打造的跟 Mac 一样牛逼？ 干掉 Navicat！ 一款数据分析师必备的数据库可视化工具 分分钟甩Word几条街，Python编辑公式竟可以如此简单！ 好强一个Julia！CSV数据读取，性能最高多出R、Python 22倍 有了这款自动补全代码神器，撸码速度提升N倍！ 12.6 其他 图解 SQL，这也太形象了吧！ 众所周知,B站并不是个学习网站 众所周知，YouTube是个学习网站 程序员接私活必备的 10 个开源项目！ 收藏一波：常用正则表达式公式总结 为什么“晚上9点钟洗澡的大学生成绩更好”？ 这10个让你笑的合不拢嘴的GitHub项目，居然拿了7万星 怎么才能优雅地向导师表达「这周科研没什么进展」？ 一文掌握数据库最核心的功能——优化器 1.3万星！Github 程序员转行考公务员指南 撸啊撸~开局10分钟机器学习就能预测比赛的胜负！ 数据分析必读干货：简单而实用的3大分析方法 31 个惊艳的数据可视化作品，让你感受“数据之美”！ 山东省的小学生Python编程入门都学的什么？ 一个神奇的Python机器学习交互应用开放框架 B站上爆红的数学视频，居然都是用这个开源项目做的 Papers with Code新增CS、物理、数学、统计学等多个学科 对比了Github上5000份Python开源之后，大神精选了36个项目！ 数据分析5大软件大PK：Python、Excel、R、SAS、SPSS你最爱哪个？ 高考作文也被AI攻克？B站UP主爆肝100天，开发会写高考作文的AI 大清朝数学家写的微积分教材，堪称天书！ 【保姆级教程】白嫖老外的云服务器 清华大学开源了一项神器，已经在GitHub爆了 2021 互联网公司时薪排行榜出炉！微软、美团很强！ 通往诺贝尔奖之路的十个科学家族 人工智能 65 年简史 李飞飞 : 人工智能领域14大机遇与挑战（附pdf） 清华大学：2021元宇宙研究报告！ 用统计学玩《鱿鱼游戏》 【PPT】清华大学黄民烈博士：本科生如何做出好的科研 名存实亡！2021大厂人工智能研究院现状盘点 牛逼啊！接私活必备的 10 个开源项目！赶快收藏吧！ 斯坦福大学计算机系，所有课程！ 这 4 个网站，我打开就没再关过。。。 222页斯坦福人工智能报告出炉:AI博士的待遇也不容乐观 错失神经网络之父！百度的AI秘史 人工智能有多智障？ 简直让人欲罢不能！820个机器学习 和 Python库，star超260万 微软这个太强了 北大最神博士论文：为什么学校打印店老板大多是湖南人？ 学会这 11 条，你离 Git 大神就不远了！ "],["联系作者.html", "第 13 章 联系作者", " 第 13 章 联系作者 欢迎添加我的私人微信，一起交流，也可合作将这个项目进行到底！ 我的微信公众号：机器学习算法与Python实战 这个专栏部分文章首发公众号，每天推送优质干货技术文章。 https://space.bilibili.com/17868971/video "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
